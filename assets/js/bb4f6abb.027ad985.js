"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9681],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return h}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(a),h=r,f=m["".concat(p,".").concat(h)]||m[h]||u[h]||i;return a?n.createElement(f,o(o({ref:t},c),{},{components:a})):n.createElement(f,o({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6855:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=["components"],l={sidebar_position:9},p=void 0,s={unversionedId:"AI4Science/probablisticmachinelearning",id:"AI4Science/probablisticmachinelearning",title:"probablisticmachinelearning",description:"3.6. Probablistic Machine Learning and Deep Learning",source:"@site/docs/AI4Science/probablisticmachinelearning.md",sourceDirName:"AI4Science",slug:"/AI4Science/probablisticmachinelearning",permalink:"/MathEpiDeepLearning/docs/AI4Science/probablisticmachinelearning",editUrl:"https://github.com/Song921012/MathEpiDeepLearning/docs/AI4Science/probablisticmachinelearning.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"machinelearning",permalink:"/MathEpiDeepLearning/docs/AI4Science/machinelearning"},next:{title:"SciML",permalink:"/MathEpiDeepLearning/docs/AI4Science/SciML"}},c={},u=[{value:'<span id="head50">3.6. Probablistic Machine Learning and Deep Learning</span>',id:"36-probablistic-machine-learning-and-deep-learning",level:2},{value:'<span id="head51">3.6.1. GAN</span>',id:"361-gan",level:3},{value:'<span id="head52">3.6.2. Normilization Flows</span>',id:"362-normilization-flows",level:3},{value:'<span id="head53">3.6.3. VAE</span>',id:"363-vae",level:3},{value:"3.6.4 BNN",id:"364-bnn",level:3},{value:"3.6.5 Diffusion-Models",id:"365-diffusion-models",level:3},{value:'<span id="head77">3.11. Optimal Transportation</span>',id:"311-optimal-transportation",level:2}],m={toc:u};function h(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"36-probablistic-machine-learning-and-deep-learning"},(0,i.kt)("span",{id:"head50"},"3.6. Probablistic Machine Learning and Deep Learning")),(0,i.kt)("p",null,"Julia:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mcosovic/FactorGraph.jl"},"mcosovic/FactorGraph.jl: The FactorGraph package provides the set of different functions to perform inference over the factor graph with continuous or discrete random variables using the belief propagation algorithm.")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/stefan-m-lenz/BoltzmannMachines.jl"},"stefan-m-lenz/BoltzmannMachines.jl: A Julia package for training and evaluating multimodal deep Boltzmann machines")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/biaslab"},"BIASlab")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/biaslab/ReactiveMP.jl"},"biaslab/ReactiveMP.jl: Julia package for automatic Bayesian inference on a factor graph with reactive message passing")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mroavi/JunctionTrees.jl"},"mroavi/JunctionTrees.jl: A metaprogramming-based implementation of the junction tree algorithm.")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/pat-alt/LaplaceRedux.jl"},"pat-alt/LaplaceRedux.jl: Small library for using Laplace Redux with Flux Neural Networks for effortless Bayesian Deep Learning.")),(0,i.kt)("p",null,"Python:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/probml"},"Probabilistic machine learning")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/thu-ml/zhusuan"},"thu-ml/zhusuan: A probabilistic programming library for Bayesian deep learning, generative models, based on Tensorflow")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/OATML/bdl-benchmarks"},"OATML/bdl-benchmarks: Bayesian Deep Learning Benchmarks")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/pgmpy/pgmpy"},"pgmpy/pgmpy: Python Library for learning (Structure and Parameter) and inference (Probabilistic and Causal) in Bayesian Networks.")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/scikit-learn-contrib/imbalanced-learn"},"scikit-learn-contrib/imbalanced-learn: A Python Package to Tackle the Curse of Imbalanced Datasets in Machine Learning")),(0,i.kt)("h3",{id:"361-gan"},(0,i.kt)("span",{id:"head51"},"3.6.1. GAN")),(0,i.kt)("p",null,"Julia:"),(0,i.kt)("p",null,"Python:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"file:///F:/Zotero/Zotero/storage/DMJ4DGLN/torchgan.html"},"torchgan/torchgan: Research Framework for easy and efficient training of GANs based on Pytorch")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/kwotsin/mimicry"},"kwotsin/mimicry: [CVPR 2020 Workshop] A PyTorch GAN library that reproduces research results for popular GANs.")),(0,i.kt)("h3",{id:"362-normilization-flows"},(0,i.kt)("span",{id:"head52"},"3.6.2. Normilization Flows")),(0,i.kt)("p",null,"Julia:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/TuringLang/Bijectors.jl"},"TuringLang/Bijectors.jl: Implementation of normalising flows and constrained random variable transformations")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/slimgroup/InvertibleNetworks.jl"},"slimgroup/InvertibleNetworks.jl: A Julia framework for invertible neural networks")),(0,i.kt)("p",null,"FFJord is impleted in DiffEqFlux.jl"),(0,i.kt)("p",null,"Python:"),(0,i.kt)("p",null,"Survey",(0,i.kt)("a",{parentName:"p",href:"https://github.com/janosh/awesome-normalizing-flows"},"janosh/awesome-normalizing-flows: A list of awesome resources on normalizing flows.")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/RameenAbdal/StyleFlow"},"RameenAbdal/StyleFlow: StyleFlow: Attribute-conditioned Exploration of StyleGAN-generated Images using Conditional Continuous Normalizing Flows (ACM TOG 2021)")),(0,i.kt)("h3",{id:"363-vae"},(0,i.kt)("span",{id:"head53"},"3.6.3. VAE")),(0,i.kt)("p",null,"Julia:"),(0,i.kt)("p",null,"Python:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://pyro.ai/examples/vae.html"},"Variational Autoencoders \u2014 Pyro Tutorials 1.7.0 documentation")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/AntixK/PyTorch-VAE"},"AntixK/PyTorch-VAE: A Collection of Variational Autoencoders (VAE) in PyTorch.")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/timsainb/tensorflow2-generative-models"},"timsainb/tensorflow2-generative-models: Implementations of a number of generative models in Tensorflow 2. GAN, VAE, Seq2Seq, VAEGAN, GAIA, Spectrogram Inversion. Everything is self contained in a jupyter notebook for easy export to colab.")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/altosaar/variational-autoencoder"},"altosaar/variational-autoencoder: Variational autoencoder implemented in tensorflow and pytorch (including inverse autoregressive flow)")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/subinium/Pytorch-AutoEncoders?ref=pythonrepo.com"},"subinium/Pytorch-AutoEncoders at pythonrepo.com")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Ritvik19/pyradox-generative?ref=pythonrepo.com"},"Ritvik19/pyradox-generative at pythonrepo.com")),(0,i.kt)("h3",{id:"364-bnn"},"3.6.4 BNN"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/JavierAntoran/Bayesian-Neural-Networks"},"JavierAntoran/Bayesian-Neural-Networks: Pytorch implementations of Bayes By Backprop, MC Dropout, SGLD, the Local Reparametrization Trick, KF-Laplace, SG-HMC and more")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/RajDandekar/MSML21_BayesianNODE"},"RajDandekar/MSML21_BayesianNODE")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/topics/bayesian-neural-networks"},"bayesian-neural-networks \xb7 GitHub Topics")),(0,i.kt)("h3",{id:"365-diffusion-models"},"3.6.5 Diffusion-Models"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/heejkoo/Awesome-Diffusion-Models"},"heejkoo/Awesome-Diffusion-Models: A collection of resources and papers on Diffusion Models and Score-based Models, a darkhorse in the field of Generative Models")),(0,i.kt)("h2",{id:"311-optimal-transportation"},(0,i.kt)("span",{id:"head77"},"3.11. Optimal Transportation")),(0,i.kt)("p",null,"Julia:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/JuliaOptimalTransport"},"Optimal transport in Julia")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/JuliaOptimalTransport/OptimalTransport.jl"},"JuliaOptimalTransport/OptimalTransport.jl: Optimal transport algorithms for Julia")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/JuliaOptimalTransport/ExactOptimalTransport.jl"},"JuliaOptimalTransport/ExactOptimalTransport.jl: Solving unregularized optimal transport problems with Julia")),(0,i.kt)("p",null,"Python:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/PythonOT/POT"},"PythonOT/POT: POT : Python Optimal Transport")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ott-jax/ott"},"ott-jax/ott")))}h.isMDXComponent=!0}}]);