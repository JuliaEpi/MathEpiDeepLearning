"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1276],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),f=a,b=m["".concat(u,".").concat(f)]||m[f]||s[f]||i;return n?r.createElement(b,o(o({ref:t},p),{},{components:n})):r.createElement(b,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5071:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:4},u=void 0,c={unversionedId:"AI4Science/HPC",id:"AI4Science/HPC",title:"HPC",description:"HPC",source:"@site/docs/AI4Science/HPC.md",sourceDirName:"AI4Science",slug:"/AI4Science/HPC",permalink:"/MathEpiDeepLearning/docs/AI4Science/HPC",editUrl:"https://github.com/Song921012/MathEpiDeepLearning/docs/AI4Science/HPC.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Integrals",permalink:"/MathEpiDeepLearning/docs/AI4Science/Integrals"},next:{title:"optimization",permalink:"/MathEpiDeepLearning/docs/AI4Science/optimization"}},p={},s=[{value:"HPC",id:"hpc",level:2},{value:"Platforms, CPU, GPU and TPU",id:"platforms-cpu-gpu-and-tpu",level:3}],m={toc:s};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"hpc"},"HPC"),(0,i.kt)("h3",{id:"platforms-cpu-gpu-and-tpu"},"Platforms, CPU, GPU and TPU"),(0,i.kt)("p",null,"Julia GPU organization"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/JuliaGPU"},"JuliaGPU")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/JuliaParallel"},"JuliaParallel")),(0,i.kt)("p",null,"multithread",(0,i.kt)("a",{parentName:"p",href:"https://github.com/JuliaSIMD"},"JuliaSIMD")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/JuliaAstroSim/ParallelOperations.jl"},"JuliaAstroSim/ParallelOperations.jl: Basic parallel algorithms for Julia")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/banyan-team/banyan-julia"},"banyan-team/banyan-julia: A suite of libraries for processing big data with familiar Julia APIs.")),(0,i.kt)("p",null,"Python:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/tonybaloney/Pyjion"},"tonybaloney/Pyjion: Pyjion - A JIT for Python based upon CoreCLR")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/numba/numba"},"numba/numba: NumPy aware dynamic Python compiler using LLVM")))}f.isMDXComponent=!0}}]);