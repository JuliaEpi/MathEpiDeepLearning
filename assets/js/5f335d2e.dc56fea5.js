"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9722],{3905:function(t,a,e){e.d(a,{Zo:function(){return u},kt:function(){return c}});var i=e(7294);function n(t,a,e){return a in t?Object.defineProperty(t,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[a]=e,t}function l(t,a){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),e.push.apply(e,i)}return e}function r(t){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?l(Object(e),!0).forEach((function(a){n(t,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))}))}return t}function o(t,a){if(null==t)return{};var e,i,n=function(t,a){if(null==t)return{};var e,i,n={},l=Object.keys(t);for(i=0;i<l.length;i++)e=l[i],a.indexOf(e)>=0||(n[e]=t[e]);return n}(t,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(i=0;i<l.length;i++)e=l[i],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(n[e]=t[e])}return n}var p=i.createContext({}),s=function(t){var a=i.useContext(p),e=a;return t&&(e="function"==typeof t?t(a):r(r({},a),t)),e},u=function(t){var a=s(t.components);return i.createElement(p.Provider,{value:a},t.children)},h={inlineCode:"code",wrapper:function(t){var a=t.children;return i.createElement(i.Fragment,{},a)}},m=i.forwardRef((function(t,a){var e=t.components,n=t.mdxType,l=t.originalType,p=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),m=s(e),c=n,k=m["".concat(p,".").concat(c)]||m[c]||h[c]||l;return e?i.createElement(k,r(r({ref:a},u),{},{components:e})):i.createElement(k,r({ref:a},u))}));function c(t,a){var e=arguments,n=a&&a.mdxType;if("string"==typeof t||n){var l=e.length,r=new Array(l);r[0]=m;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=t,o.mdxType="string"==typeof t?t:n,r[1]=o;for(var s=2;s<l;s++)r[s]=e[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,e)}m.displayName="MDXCreateElement"},1811:function(t,a,e){e.r(a),e.d(a,{contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return u}});var i=e(7462),n=e(3366),l=(e(7294),e(3905)),r=["components"],o={},p=void 0,s={type:"mdx",permalink:"/MathEpiDeepLearning/packagecollections",source:"@site/src/pages/packagecollections.md",description:"See Website of MathEpiDeepLearning",frontMatter:{}},u=[{value:'<span id="head3">1.1. Data Science</span>',id:"11-data-science",level:2},{value:'<span id="head4"> Smoothing</span>',id:"-smoothing",level:2},{value:'<span id="head75"> Outlier Detection</span>',id:"-outlier-detection",level:2},{value:'<span id="head6">2.1. Statistics</span>',id:"21-statistics",level:2},{value:'<span id="head7">2.2. (Deep Learning based) Time Seris Analysis</span>',id:"22-deep-learning-based-time-seris-analysis",level:2},{value:'<span id="head8">2.3. Survival Analysis</span>',id:"23-survival-analysis",level:2},{value:'<span id="head9">2.4. Data Visulization</span>',id:"24-data-visulization",level:2},{value:"Venn Diagrams",id:"venn-diagrams",level:3},{value:'<span id="head76">2.5. GLM</span>',id:"25-glm",level:2},{value:'<span id="head11">3.1. Differentialation, Quadrature and Tensor computation</span>',id:"31-differentialation-quadrature-and-tensor-computation",level:2},{value:'<span id="head12">3.1.1. Auto Differentiation</span>',id:"311-auto-differentiation",level:3},{value:'<span id="head13">Auto Difference</span>',id:"auto-difference",level:4},{value:"Differential Optimization (Conditional gradients)",id:"differential-optimization-conditional-gradients",level:4},{value:"Subgradient, Condition, Projected, Proximal gradients",id:"subgradient-condition-projected-proximal-gradients",level:4},{value:'<span id="head14">3.1.2. Quadrature</span>',id:"312-quadrature",level:3},{value:'<span id="head15">Bayesian Methods</span>',id:"bayesian-methods",level:4},{value:'<span id="head16">Expectations calculation</span>',id:"expectations-calculation",level:4},{value:'<span id="head17">3.1.3. Matrix and Tensor computation</span>',id:"313-matrix-and-tensor-computation",level:3},{value:'<span id="head18">Special Matrix and Arrays</span>',id:"special-matrix-and-arrays",level:4},{value:'<span id="head80"> Computation </span>',id:"-computation-",level:4},{value:'<span id="head19"> Eigenvalues and Solvers </span>',id:"-eigenvalues-and-solvers-",level:4},{value:'<span id="head20">Maps and Operators</span>',id:"maps-and-operators",level:4},{value:'<span id="head21">Matrxi Equations</span>',id:"matrxi-equations",level:4},{value:'<span id="head22">Kronecker-based algebra</span>',id:"kronecker-based-algebra",level:4},{value:'<span id="head23">3.1.4.Platforms, CPU, GPU and TPU</span>',id:"314platforms-cpu-gpu-and-tpu",level:3},{value:'<span id="head24">3.2. Optimization</span>',id:"32-optimization",level:2},{value:'<span id="head25">3.2.1. Metaheuristic</span>',id:"321-metaheuristic",level:3},{value:'<span id="head26">3.2.2. Evolution Stragegy</span>',id:"322-evolution-stragegy",level:3},{value:'<span id="head27">3.2.3. Genetic Algorithms</span>',id:"323-genetic-algorithms",level:3},{value:'<span id="head28">3.2.4. Nonconvex</span>',id:"324-nonconvex",level:3},{value:"3.2.5. First Order Methods",id:"325-first-order-methods",level:3},{value:"3.2.6. Second Order Methods",id:"326-second-order-methods",level:3},{value:'<span id="head29">3.3. Optimal Control</span>',id:"33-optimal-control",level:2},{value:'<span id="head30">3.4. Bayesian Inference</span>',id:"34-bayesian-inference",level:2},{value:'<span id="head31">3.4.1. MCMC</span>',id:"341-mcmc",level:3},{value:'<span id="head32">3.4.2. Approximate Bayesian Computation (ABC)</span>',id:"342-approximate-bayesian-computation-abc",level:3},{value:'<span id="head33">3.4.3. Data Assimilation (SMC, particles filter)</span>',id:"343-data-assimilation-smc-particles-filter",level:3},{value:'<span id="head34">3.4.4. Variational Inference</span>',id:"344-variational-inference",level:3},{value:'<span id="head35">3.4.5. Gaussion, non-Gaussion and Kernel</span>',id:"345-gaussion-non-gaussion-and-kernel",level:3},{value:'<span id="head36">3.4.6. Bayesian Optimization</span>',id:"346-bayesian-optimization",level:3},{value:'<span id="head37">3.4.7. Information theory</span>',id:"347-information-theory",level:3},{value:'<span id="head38">3.4.8. Uncertainty</span>',id:"348-uncertainty",level:3},{value:'<span id="head39">3.4.9. Casual</span>',id:"349-casual",level:3},{value:'<span id="head40">3.4.10. Sampling</span>',id:"3410-sampling",level:3},{value:"3.4.11 Message Passing",id:"3411-message-passing",level:3},{value:'<span id="head41">3.5. Machine Learning and Deep Learning</span>',id:"35-machine-learning-and-deep-learning",level:2},{value:'<span id="head42">3.5.1. Machine Learning</span>',id:"351-machine-learning",level:3},{value:'<span id="head43">3.5.2. Deep Learning</span>',id:"352-deep-learning",level:3},{value:'<span id="head44">3.5.3. Reinforce Learning</span>',id:"353-reinforce-learning",level:3},{value:'<span id="head45">3.5.4. GNN</span>',id:"354-gnn",level:3},{value:'<span id="head46">3.5.5. Transformer</span>',id:"355-transformer",level:3},{value:'<span id="head47">3.5.6. Transfer Learning</span>',id:"356-transfer-learning",level:3},{value:'<span id="head48">3.5.7. Neural Tangent</span>',id:"357-neural-tangent",level:3},{value:'<span id="head49">3.5.8. Visulization</span>',id:"358-visulization",level:3},{value:"Semi-supervised Learning",id:"semi-supervised-learning",level:3},{value:'<span id="head50">3.6. Probablistic Machine Learning and Deep Learning</span>',id:"36-probablistic-machine-learning-and-deep-learning",level:2},{value:'<span id="head51">3.6.1. GAN</span>',id:"361-gan",level:3},{value:'<span id="head52">3.6.2. Normilization Flows</span>',id:"362-normilization-flows",level:3},{value:'<span id="head53">3.6.3. VAE</span>',id:"363-vae",level:3},{value:"3.6.4 BNN",id:"364-bnn",level:3},{value:"3.6.5 Diffusion-Models",id:"365-diffusion-models",level:3},{value:'<span id="head54">3.7. Differential Equations and Scientific Computation</span>',id:"37-differential-equations-and-scientific-computation",level:2},{value:'<span id="head55">3.7.1. Partial differential equation</span>',id:"371-partial-differential-equation",level:3},{value:"Integral Differential Equation",id:"integral-differential-equation",level:4},{value:"3.7.2 Fractional Differential and Calculus",id:"372-fractional-differential-and-calculus",level:3},{value:'<span id="head56">3.8. Scientific Machine Learning (Differential Equation and ML)</span>',id:"38-scientific-machine-learning-differential-equation-and-ml",level:2},{value:'<span id="head57">3.8.1. Universal Differential Equations. (Neural differential equations)</span>',id:"381-universal-differential-equations-neural-differential-equations",level:3},{value:'<span id="head58">3.8.2. Physical Informed Neural Netwworks</span>',id:"382-physical-informed-neural-netwworks",level:3},{value:'<span id="head59">3.8.3. Neural Operator</span>',id:"383-neural-operator",level:3},{value:'<span id="head60">3.9. Data Driven Methods (Equation Searching Methods)</span>',id:"39-data-driven-methods-equation-searching-methods",level:2},{value:'<span id="head61">3.9.1. Symbolic Regression</span>',id:"391-symbolic-regression",level:3},{value:'<span id="head62">3.9.2. SINDy (Sparse Identification of Nonlinear Dynamics from Data)</span>',id:"392-sindy-sparse-identification-of-nonlinear-dynamics-from-data",level:3},{value:'<span id="head63">3.9.3. DMD (Dynamic Mode Decomposition)</span>',id:"393-dmd-dynamic-mode-decomposition",level:3},{value:'<span id="head64">3.10. Model Evaluation</span>',id:"310-model-evaluation",level:2},{value:'<span id="head65">3.10.1. Structure Idendification</span>',id:"3101-structure-idendification",level:3},{value:'<span id="head66">3.10.2. Global Sensitivity Anylysis</span>',id:"3102-global-sensitivity-anylysis",level:3},{value:'<span id="head77">3.11. Optimal Transportation</span>',id:"311-optimal-transportation",level:2},{value:'<span id="head81">3.12. Agents, Graph and Networks</span>',id:"312-agents-graph-and-networks",level:2},{value:"3.12 Benchmarks",id:"312-benchmarks",level:2},{value:'<span id="head68">4.0. Special Functions</span>',id:"40-special-functions",level:2},{value:'<span id="head69">4.1. Symbolic Computation</span>',id:"41-symbolic-computation",level:2},{value:"FFTW",id:"fftw",level:2},{value:'<span id="head70">4.3. Roots, Intepolations</span>',id:"43-roots-intepolations",level:2},{value:'<span id="head71">4.3.1. Roots</span>',id:"431-roots",level:3},{value:'<span id="head72">4.3.2. Interpolations and Approximations</span>',id:"432-interpolations-and-approximations",level:3},{value:'<span id="head73">4.2. Bifurcation</span>',id:"42-bifurcation",level:2},{value:"4.4 Polynomials",id:"44-polynomials",level:2},{value:"Terminal",id:"terminal",level:2}],h={toc:u};function m(t){var a=t.components,e=(0,n.Z)(t,r);return(0,l.kt)("wrapper",(0,i.Z)({},h,e,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"mathepideeplearning"},"MathEpiDeepLearning"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"https://song921012.github.io/MathEpiDeepLearning/"},"Website of MathEpiDeepLearning")),(0,l.kt)("p",null,"Guides on contributions:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Open issues to add source links"),(0,l.kt)("li",{parentName:"ul"},"Fork and pull requests")),(0,l.kt)("p",null,"Also see its twin repo ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Song921012/MathEpiDeepLearningTutorial"},"MathEpiDeepLearningTutorial: Tutorials on math epidemiology and epidemiology informed deep learning methods"),"."),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://github.com/Song921012/MathEpiDeepLearningTutorial/blob/main/Data/Pictures/DifferentialPrograming1.png?raw=ture",alt:"DiffrentialPrograming"})),(0,l.kt)("p",null,"Contents:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#head1"},"Introduction"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#head79"},"0. Epidemic Model"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#head2"},"1. Data Preprocessing")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head3"},"1.1. Data Science")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head4"},"Smoothing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head75"},"Outlier Detection")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#head5"},"2. Basic Statistics and Data Visualization")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head6"},"2.1. Statistics")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head7"},"2.2. (Deep Learning based) Time Seris Analysis")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head8"},"2.3. Survival Analysis")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head9"},"2.4. Data Visulization")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head76"},"2.5. GLM")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#head10"},"3. Differential Programing and Data Mining")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head11"},"3.1. Differentialation, Quadrature and Tensor computation"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head12"},"3.1.1. Auto Differentiation"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head13"},"Auto Difference")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head14"},"3.1.2. Quadrature"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head15"},"Bayesian Methods")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head16"},"Expectations calculation")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head17"},"3.1.3. Matrix and Tensor computation"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head18"},"Special Matrix")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head19"},"Eigenvalues")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head80"},"Tensor computation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head20"},"Maps and Operators")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head21"},"Matrxi Equations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head22"},"Kronecker-based algebra")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head23"},"3.1.4. CPU, GPU and TPU")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head24"},"3.2. Optimization"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head25"},"3.2.1. Metaheuristic")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head26"},"3.2.2. Evolution Stragegy")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head27"},"3.2.3. Genetic Algorithms")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head28"},"3.2.4. Nonconvex")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head29"},"3.3. Optimal Control")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head30"},"3.4. Bayesian Inference"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head31"},"3.4.1. MCMC")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head32"},"3.4.2. Approximate Bayesian Computation (ABC)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head33"},"3.4.3. Data Assimilation (SMC, particles filter)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head34"},"3.4.4. Variational Inference")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head35"},"3.4.5. Gaussion, non-Gaussion and Kernel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head36"},"3.4.6. Bayesian Optimization")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head37"},"3.4.7. Information theory")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head38"},"3.4.8. Uncertanty")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head39"},"3.4.9. Casual")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head40"},"3.4.10. Sampling")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head41"},"3.5. Machine Learning and Deep Learning"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head42"},"3.5.1. Machine Learning")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head43"},"3.5.2. Deep Learning")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head44"},"3.5.3. Reinforce Learning")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head45"},"3.5.4. GNN")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head46"},"3.5.5. Transformer")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head47"},"3.5.6. Transfer Learning")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head48"},"3.5.7. Neural Tangent")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head49"},"3.5.8. Visulization")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head50"},"3.6. Probablistic Machine Learning and Deep Learning"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head51"},"3.6.1. GAN")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head52"},"3.6.2. Normilization Flows")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head53"},"3.6.3. VAE")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head54"},"3.7. Differential Equations and Scientific Computation"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head55"},"3.7.1. Partial differential equation")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head56"},"3.8. Scientific Machine Learning (Differential Equation and ML)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head57"},"3.8.1. Universal Differential Equations. (Neural differential equations)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head58"},"3.8.2. Physical Informed Neural Netwworks")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head59"},"3.8.3. Neural Operator")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head60"},"3.9. Data Driven Methods (Equation Searching Methods)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head61"},"3.9.1. Symbolic Regression")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head62"},"3.9.2. SINDy (Sparse Identification of Nonlinear Dynamics from Data)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head63"},"3.9.3. DMD (Dynamic Mode Decomposition)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head64"},"3.10. Model Evaluation"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head65"},"3.10.1. Structure Idendification")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head66"},"3.10.2. Global Sensitivity Anylysis")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head77"},"3.10. Optimal Transportation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head81"},"3.11. Agents, Graph and Networks")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#head67"},"4. Theoretical Analysis")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head68"},"4.0. Special Functions")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head69"},"4.1. Symbolic Computation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head70"},"4.3. Roots, Intepolations"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head71"},"4.3.1. Roots")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head72"},"4.3.2. Intepolations")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#head73"},"4.2. Bifurcation")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"#head74"},"5. Writings, Blog and Web")))),(0,l.kt)("h1",{id:"-introduction"},(0,l.kt)("span",{id:"head1"}," Introduction")),(0,l.kt)("p",null,"  Julia and Python resources on mathematical epidemiology and epidemiology informed deep learning methods. Most about package information. Main Topics include"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Data Preprocessing"),(0,l.kt)("li",{parentName:"ul"},"Basic Statistics and Data Visualization"),(0,l.kt)("li",{parentName:"ul"},"Differential Programing and Data Mining\nsuch as bayesian inference, deep learning, scientific machine learning computation"),(0,l.kt)("li",{parentName:"ul"},"Theoretical Analysis\nsuch as calculus, bifurcation analysis"),(0,l.kt)("li",{parentName:"ul"},"Writings, Blog and Web")),(0,l.kt)("p",null,"[TOC]"),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/epirecipes/sir-julia"},"epirecipes/sir-julia: Various implementations of the classical SIR model in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jangevaare/Pathogen.jl"},"jangevaare/Pathogen.jl: Simulation, visualization, and inference tools for modelling the spread of infectious diseases with Julia")),(0,l.kt)("p",null,"Mobility",(0,l.kt)("a",{parentName:"p",href:"https://github.com/jtmatamalas/MMCAcovid19.jl"},"jtmatamalas/MMCAcovid19.jl: Microscopic Markov Chain Approach to model the spreading of COVID-19")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jpfairbanks/SemanticModels.jl"},"jpfairbanks/SemanticModels.jl: A julia package for representing and manipulating model semantics")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cambridge-mlg/Covid19"},"cambridge-mlg/Covid19")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/affans/covid19abm.jl"},"affans/covid19abm.jl: Agent Based Model for COVID 19 transmission dynamics")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ryansmcgee/seirsplus"},"ryansmcgee/seirsplus: Models of SEIRS epidemic dynamics with extensions, including network-structured populations, testing, contact tracing, and social distancing.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.pyro.ai/en/stable/_modules/pyro/contrib/epidemiology/models.html#HeterogeneousSIRModel"},"pyro.contrib.epidemiology.models \u2014 Pyro documentation")),(0,l.kt)("p",null,"Modelling Human Mobility\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/scikit-mobility/scikit-mobility"},"scikit-mobility/scikit-mobility: scikit-mobility: mobility analysis in Python")),(0,l.kt)("p",null,"Matlab:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JDureau/AllScripts"},"JDureau/AllScripts")),(0,l.kt)("h1",{id:"1-data-preprocessing"},(0,l.kt)("span",{id:"head2"},"1. Data Preprocessing")),(0,l.kt)("h2",{id:"11-data-science"},(0,l.kt)("span",{id:"head3"},"1.1. Data Science")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaData"},"JuliaData")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaData/CSV.jl"},"JuliaData/CSV.jl: Utility library for working with CSV and other delimited files in the Julia programming language")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaData/DataFrames.jl"},"JuliaData/DataFrames.jl: In-memory tabular data in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaStats/TimeSeries.jl"},"JuliaStats/TimeSeries.jl: Time series toolkit for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/queryverse"},"Queryverse")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDatabases"},"JuliaDatabases")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,"Numpy"),(0,l.kt)("p",null,"Pandas"),(0,l.kt)("h2",{id:"-smoothing"},(0,l.kt)("span",{id:"head4"}," Smoothing")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PumasAI/DataInterpolations.jl"},"PumasAI/DataInterpolations.jl: A library of data interpolation and smoothing functions")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/viraltux/Smoothers.jl"},"viraltux/Smoothers.jl: Collection of basic smoothers and smoothing related applications")),(0,l.kt)("p",null,"TimeSeries.moving"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/dysonance/Indicators.jl"},"dysonance/Indicators.jl: Financial market technical analysis & indicators in Julia")),(0,l.kt)("p",null,"Expotential Smoothing:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/LAMPSPUC/StateSpaceModels.jl"},"LAMPSPUC/StateSpaceModels.jl: StateSpaceModels.jl is a Julia package for time-series analysis using state-space models.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/miguelraz/StagedFilters.jl"},"miguelraz/StagedFilters.jl")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDSP/DSP.jl"},"JuliaDSP/DSP.jl: Filter design, periodograms, window functions, and other digital signal processing functionality")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/konkam/FeynmanKacParticleFilters.jl"},"konkam/FeynmanKacParticleFilters.jl: Particle filtering using the Feynman-Kac formalism")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mschauer/Kalman.jl"},"mschauer/Kalman.jl: Flexible filtering and smoothing in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaStats/Loess.jl"},"JuliaStats/Loess.jl: Local regression, so smooooth!")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/CliMA/EnsembleKalmanProcesses.jl"},"CliMA/EnsembleKalmanProcesses.jl: Implements Optimization and approximate uncertainty quantification algorithms, Ensemble Kalman Inversion, and Ensemble Kalman Processes.")),(0,l.kt)("h2",{id:"-outlier-detection"},(0,l.kt)("span",{id:"head75"}," Outlier Detection")),(0,l.kt)("p",null,"Survey",(0,l.kt)("a",{parentName:"p",href:"https://github.com/rob-med/awesome-TS-anomaly-detection"},"rob-med/awesome-TS-anomaly-detection: List of tools & datasets for anomaly detection on time-series data.")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/OutlierDetectionJL"},"OutlierDetectionJL")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/baggepinnen/MatrixProfile.jl"},"baggepinnen/MatrixProfile.jl: Time-series analysis using the Matrix profile in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jbytecode/LinRegOutliers"},"jbytecode/LinRegOutliers: Direct and robust methods for outlier detection in linear regression")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/yzhao062/pyod"},"yzhao062/pyod: A Python Toolbox for Scalable Outlier Detection (Anomaly Detection)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cerlymarco/tsmoothie"},"cerlymarco/tsmoothie: A python library for time-series smoothing and outlier detection in a vectorized way.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/DHI/tsod"},"DHI/tsod: Anomaly Detection for time series data")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pygod-team/pygod"},"pygod-team/pygod: A Python Library for Graph Outlier Detection (Anomaly Detection)")),(0,l.kt)("h1",{id:"2-basic-statistics-and-data-visualization"},(0,l.kt)("span",{id:"head5"},"2. Basic Statistics and Data Visualization")),(0,l.kt)("h2",{id:"21-statistics"},(0,l.kt)("span",{id:"head6"},"2.1. Statistics")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaStats"},"Julia Statistics")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gragusa"},"gragusa (Giuseppe Ragusa)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cscherrer/MeasureTheory.jl"},'cscherrer/MeasureTheory.jl: "Distributions" that might not add to one.')),(0,l.kt)("p",null,"python"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/erdogant/distfit"},"erdogant/distfit: Python package for probability density function fitting of univariate distributions of non-censored data.")),(0,l.kt)("h2",{id:"22-deep-learning-based-time-seris-analysis"},(0,l.kt)("span",{id:"head7"},"2.2. (Deep Learning based) Time Seris Analysis")),(0,l.kt)("p",null,"Julia: (few)"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"file:///F:/Zotero/Zotero/storage/GJAUE3T5/TimeSeries.html"},"JuliaStats/TimeSeries.jl: Time series toolkit for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDynamics/ARFIMA.jl"},"JuliaDynamics/ARFIMA.jl: Simulate stochastic timeseries that follow ARFIMA, ARMA, ARIMA, AR, etc. processes")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/lmmentel/awesome-time-series"},"lmmentel/awesome-time-series: Resources for working with time series and sequence data")),(0,l.kt)("p",null,"Survey",(0,l.kt)("a",{parentName:"p",href:"https://github.com/MaxBenChrist/awesome_time_series_in_python"},"MaxBenChrist/awesome_time_series_in_python: This curated list contains python packages for time series analysis")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"file:///F:/Zotero/Zotero/storage/JRHBIF8V/index.html"},"Introduction \u2014 statsmodels")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/unit8co/darts"},"unit8co/darts: A python library for easy manipulation and forecasting of time series.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/alan-turing-institute/sktime"},"alan-turing-institute/sktime: A unified framework for machine learning with time series")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jdb78/pytorch-forecasting"},"jdb78/pytorch-forecasting: Time series forecasting with PyTorch")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/AIStream-Peelout/flow-forecast"},"AIStream-Peelout/flow-forecast: Deep learning PyTorch library for time series forecasting, classification, and anomaly detection (originally for flood forecasting).")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/timeseriesAI/tsai"},"timeseriesAI/tsai: Time series Timeseries Deep Learning Machine Learning Pytorch fastai | State-of-the-art Deep Learning library for Time Series and Sequences in Pytorch / fastai")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tslearn-team/tslearn"},"tslearn-team/tslearn: A machine learning toolkit dedicated to time-series data")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/salesforce/Merlion"},"salesforce/Merlion: Merlion: A Machine Learning Framework for Time Series Intelligence")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ourownstory/neural_prophet"},"ourownstory/neural_prophet: NeuralProphet: A simple forecasting package")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/sktime/sktime-dl"},"sktime/sktime-dl: sktime companion package for deep learning based on TensorFlow")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/IBM/TSML.jl"},"IBM/TSML.jl: A package for time series data processing, classification, clustering, and prediction.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/alkaline-ml/pmdarima"},"alkaline-ml/pmdarima: A statistical library designed to fill the void in Python's time series analysis capabilities, including the equivalent of R's auto.arima function.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/zhouhaoyi/Informer2020"},'zhouhaoyi/Informer2020: The GitHub repository for the paper "Informer" accepted by AAAI 2021.')),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/blue-yonder/tsfresh"},"blue-yonder/tsfresh: Automatic extraction of relevant features from time series:")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/microsoft/forecasting"},"microsoft/forecasting: Time Series Forecasting Best Practices & Examples")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/TDAmeritrade/stumpy"},"TDAmeritrade/stumpy: STUMPY is a powerful and scalable Python library for modern time series analysis")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/databrickslabs/tempo"},"databrickslabs/tempo: API for manipulating time series on top of Apache Spark: lagged time values, rolling statistics (mean, avg, sum, count, etc), AS OF joins, downsampling, and interpolation")),(0,l.kt)("h2",{id:"23-survival-analysis"},(0,l.kt)("span",{id:"head8"},"2.3. Survival Analysis")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://humboldt-wi.github.io/blog/research/information_systems_1920/group2_survivalanalysis/"},"Deep Learning for Survival Analysis")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/sebp/scikit-survival"},"sebp/scikit-survival: Survival analysis built on top of scikit-learn")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/havakv/pycox"},"havakv/pycox: Survival analysis with PyTorch")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/camDavidsonPilon/lifelines"},"CamDavidsonPilon/lifelines: Survival analysis in Python")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/chl8856/DeepHit"},"chl8856/DeepHit: DeepHit: A Deep Learning Approach to Survival Analysis with Competing Risks")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jaredleekatzman/DeepSurv"},"jaredleekatzman/DeepSurv: DeepSurv is a deep learning approach to survival analysis.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/square/pysurvival/"},"square/pysurvival: Open source package for Survival Analysis modeling")),(0,l.kt)("h2",{id:"24-data-visulization"},(0,l.kt)("span",{id:"head9"},"2.4. Data Visulization")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaPlots"},"JuliaPlots")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/GiovineItalia/Gadfly.jl"},"GiovineItalia/Gadfly.jl: Crafty statistical graphics for Julia.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/queryverse/VegaLite.jl"},"queryverse/VegaLite.jl: Julia bindings to Vega-Lite")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaPlots/UnicodePlots.jl"},"JuliaPlots/UnicodePlots.jl: Unicode-based scientific plotting for working in the terminal")),(0,l.kt)("p",null,"Colors and Color schemes"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaGraphics/Colors.jl"},"JuliaGraphics/Colors.jl: Color manipulation utilities for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaGraphics/ColorSchemes.jl"},"JuliaGraphics/ColorSchemes.jl: colorschemes, colormaps, gradients, and palettes")),(0,l.kt)("p",null,"Interactive"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/GenieFramework/Stipple.jl"},"GenieFramework/Stipple.jl: The reactive UI library for interactive data applications with pure Julia.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/theogf/Turkie.jl"},"theogf/Turkie.jl: Turing + Makie = Turkie")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,"Matplotlib"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/rougier/scientific-visualization-book"},"rougier/scientific-visualization-book: An open access book on scientific visualization using python and matplotlib")),(0,l.kt)("p",null,"R:"),(0,l.kt)("p",null,"Color themes:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://emilhvitfeldt.github.io/r-color-palettes/discrete.html"},"discrete.knit")),(0,l.kt)("h3",{id:"venn-diagrams"},"Venn Diagrams"),(0,l.kt)("p",null,"R:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/yanlinlin82/ggvenn"},"yanlinlin82/ggvenn: Venn Diagram by ggplot2, with really easy-to-use API.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gaospecial/ggVennDiagram"},"gaospecial/ggVennDiagram: A 'ggplot2' implement of Venn Diagram.")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/konstantint/matplotlib-venn"},"konstantint/matplotlib-venn: Area-weighted venn-diagrams for Python/matplotlib")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaPlots/VennEuler.jl"},"JuliaPlots/VennEuler.jl: Venn/Euler Diagrams for Julia")),(0,l.kt)("h2",{id:"25-glm"},(0,l.kt)("span",{id:"head76"},"2.5. GLM")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/bambinos/bambi"},"bambinos/bambi: BAyesian Model-Building Interface (Bambi) in Python.")),(0,l.kt)("h1",{id:"3-differential-programing-and-data-mining"},(0,l.kt)("span",{id:"head10"},"3. Differential Programing and Data Mining")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/TheAlgorithms"},"The Algorithms")),(0,l.kt)("h2",{id:"31-differentialation-quadrature-and-tensor-computation"},(0,l.kt)("span",{id:"head11"},"3.1. Differentialation, Quadrature and Tensor computation")),(0,l.kt)("h3",{id:"311-auto-differentiation"},(0,l.kt)("span",{id:"head12"},"3.1.1. Auto Differentiation")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/DiffEqSensitivity.jl"},"SciML/DiffEqSensitivity.jl: A component of the DiffEq ecosystem for enabling sensitivity analysis for scientific machine learning (SciML). Optimize-then-discretize, discretize-then-optimize, and more for ODEs, SDEs, DDEs, DAEs, etc.")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/FluxML/Zygote.jl"},"FluxML/Zygote.jl: Intimate Affection Auditor")),(0,l.kt)("p",null,"JuliaDiffEqFlux organization"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDiff"},"JuliaDiff")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDiff/ForwardDiff.jl"},"JuliaDiff/ForwardDiff.jl: Forward Mode Automatic Differentiation for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDiff/ReverseDiff.jl"},"JuliaDiff/ReverseDiff.jl: Reverse Mode Automatic Differentiation for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDiff/AbstractDifferentiation.jl"},"JuliaDiff/AbstractDifferentiation.jl: An abstract interface for automatic differentiation.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDiff/TaylorSeries.jl"},"JuliaDiff/TaylorSeries.jl: A julia package for Taylor polynomial expansions in one and several independent variables.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/kailaix/ADCME.jl"},"kailaix/ADCME.jl: Automatic Differentiation Library for Computational and Mathematical Engineering")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/chakravala/Leibniz.jl"},"chakravala/Leibniz.jl: Tensor algebra utility library")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/briochemc/F1Method.jl"},"briochemc/F1Method.jl: F-1 method")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/google/jax"},"google/jax: Composable transformations of Python+NumPy programs: differentiate, vectorize, JIT to GPU/TPU, and more")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pytorch/pytorch"},"pytorch/pytorch: Tensors and Dynamic neural networks in Python with strong GPU acceleration")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tensorflow/tensorflow"},"tensorflow/tensorflow: An Open Source Machine Learning Framework for Everyone")),(0,l.kt)("p",null,"Similar to SciMLSensitivity.jl",(0,l.kt)("a",{parentName:"p",href:"https://github.com/AMICI-dev/AMICI"},"AMICI-dev/AMICI: Advanced Multilanguage Interface to CVODES and IDAS")),(0,l.kt)("h4",{id:"auto-difference"},(0,l.kt)("span",{id:"head13"},"Auto Difference")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/DiffEqOperators.jl"},"SciML/DiffEqOperators.jl: Linear operators for discretizations of differential equations and scientific machine learning (SciML)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/QuantEcon/SimpleDifferentialOperators.jl"},"QuantEcon/SimpleDifferentialOperators.jl: Library for simple upwind finite differences")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/maroba/findiff"},"maroba/findiff: Python package for numerical derivatives and partial differential equations in any number of dimensions.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PyLops/pylops"},"PyLops/pylops: PyLops \u2013 A Linear-Operator Library for Python")),(0,l.kt)("h4",{id:"differential-optimization-conditional-gradients"},"Differential Optimization (Conditional gradients)"),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZIB-IOL/FrankWolfe.jl"},"ZIB-IOL/FrankWolfe.jl: Julia implementation for various Frank-Wolfe and Conditional Gradient variants")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jump-dev/DiffOpt.jl"},"jump-dev/DiffOpt.jl: Differentiating convex optimization programs w.r.t. program parameters")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gdalle/ImplicitDifferentiation.jl"},"gdalle/ImplicitDifferentiation.jl: Automatic differentiation of implicit functions")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/matbesancon/MathOptSetDistances.jl"},"matbesancon/MathOptSetDistances.jl: Distances to sets for MathOptInterface")),(0,l.kt)("p",null,"python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cvxgrp/cvxpylayers"},"cvxgrp/cvxpylayers: Differentiable convex optimization layers")),(0,l.kt)("h4",{id:"subgradient-condition-projected-proximal-gradients"},"Subgradient, Condition, Projected, Proximal gradients"),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,"Proximal:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaFirstOrder/ProximalOperators.jl"},"JuliaFirstOrder/ProximalOperators.jl: Proximal operators for nonsmooth optimization in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaFirstOrder/ProximalAlgorithms.jl"},"JuliaFirstOrder/ProximalAlgorithms.jl: Proximal algorithms for nonsmooth optimization in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaSmoothOptimizers/ShiftedProximalOperators.jl"},"JuliaSmoothOptimizers/ShiftedProximalOperators.jl: Proximal operators for use with RegularizedOptimization")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"http://proximity-operator.net/scalarfunctions.html"},"Prox Repository")),(0,l.kt)("p",null,"Review",(0,l.kt)("a",{parentName:"p",href:"https://github.com/PyLops/pyproximal"},"PyLops/pyproximal: PyProximal \u2013 Proximal Operators and Algorithms in Python")),(0,l.kt)("p",null,"Condition Gradient:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZIB-IOL/FrankWolfe.jl"},"ZIB-IOL/FrankWolfe.jl: Julia implementation for various Frank-Wolfe and Conditional Gradient variants")),(0,l.kt)("h3",{id:"312-quadrature"},(0,l.kt)("span",{id:"head14"},"3.1.2. Quadrature")),(0,l.kt)("p",null,"Learn One equals learn many"),(0,l.kt)("p",null,"Review",(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/Quadrature.jl"},"SciML/Quadrature.jl: A common interface for quadrature and numerical integration for the SciML scientific machine learning organization")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/QuasiMonteCarlo.jl"},"SciML/QuasiMonteCarlo.jl: Lightweight and easy generation of quasi-Monte Carlo sequences with a ton of different methods on one API for easy parameter exploration in scientific machine learning (SciML)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/SymbolicNumericIntegration.jl"},"SciML/SymbolicNumericIntegration.jl")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMath/QuadGK.jl"},"JuliaMath/QuadGK.jl: adaptive 1d numerical Gauss\u2013Kronrod integration in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMath/HCubature.jl"},"JuliaMath/HCubature.jl: pure-Julia multidimensional h-adaptive integration")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMath/Cubature.jl"},"JuliaMath/Cubature.jl: One- and multi-dimensional adaptive integration routines for the Julia language")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/giordano/Cuba.jl"},"giordano/Cuba.jl: Library for multidimensional numerical integration with four independent algorithms: Vegas, Suave, Divonne, and Cuhre.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaApproximation/FastGaussQuadrature.jl"},"JuliaApproximation/FastGaussQuadrature.jl: Julia package for Gaussian quadrature")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaApproximation/ApproxFun.jl"},"JuliaApproximation/ApproxFun.jl: Julia package for function approximation")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/machakann/DoubleExponentialFormulas.jl"},"machakann/DoubleExponentialFormulas.jl: One-dimensional numerical integration using the double exponential formula")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaApproximation/SingularIntegralEquations.jl"},"JuliaApproximation/SingularIntegralEquations.jl: Julia package for solving singular integral equations")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaGNI/GeometricIntegrators.jl"},"JuliaGNI/GeometricIntegrators.jl: Geometric Numerical Integration in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/stochastics-uni-luebeck/LevyArea.jl"},"stochastics-uni-luebeck/LevyArea.jl: Iterated stochastic integrals in Julia.")),(0,l.kt)("h4",{id:"bayesian-methods"},(0,l.kt)("span",{id:"head15"},"Bayesian Methods")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ranjanan/MonteCarloIntegration.jl"},"ranjanan/MonteCarloIntegration.jl: A package for multi-dimensional integration using monte carlo methods")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/theogf/BayesianQuadrature.jl"},"theogf/BayesianQuadrature.jl: Is there anything we can't make Bayesian?")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/s-baumann/BayesianIntegral.jl"},"s-baumann/BayesianIntegral.jl: Bayesian Integration of functions")),(0,l.kt)("p",null,"python\uff1a"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://emukit.github.io/"},"Emukit | Emukit is a highly adaptable Python toolkit for enriching decision making under uncertainty.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://probnum.readthedocs.io/en/latest/"},"ProbNum \u2014 probnum 0.1 documentation")),(0,l.kt)("h4",{id:"expectations-calculation"},(0,l.kt)("span",{id:"head16"},"Expectations calculation")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/QuantEcon/Expectations.jl"},"QuantEcon/Expectations.jl: Expectation operators for Distributions.jl objects")),(0,l.kt)("h3",{id:"313-matrix-and-tensor-computation"},(0,l.kt)("span",{id:"head17"},"3.1.3. Matrix and Tensor computation")),(0,l.kt)("p",null,"Matrix organization"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaArrays"},"JuliaArrays")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaArrays/StaticArrays.jl"},"JuliaArrays/StaticArrays.jl: Statically sized arrays for Julia"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaArrays/ArrayInterface.jl"},"JuliaArrays/ArrayInterface.jl: Designs for new Base array interface primitives, used widely through scientific machine learning (SciML) and other organizations"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaArrays/StructArrays.jl"},"JuliaArrays/StructArrays.jl: Efficient implementation of struct arrays in Julia"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaArrays/LazyArrays.jl"},"JuliaArrays/LazyArrays.jl: Lazy arrays and linear algebra in Julia"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaArrays/AxisArrays.jl"},"JuliaArrays/AxisArrays.jl: Performant arrays where each dimension can have a named axis with values"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaArrays/OffsetArrays.jl"},"JuliaArrays/OffsetArrays.jl: Fortran-like arrays with arbitrary, zero or negative starting indices."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaArrays/BlockArrays.jl"},"JuliaArrays/BlockArrays.jl: BlockArrays for Julia"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaArrays/ArraysOfArrays.jl"},"JuliaArrays/ArraysOfArrays.jl: Efficient storage and handling of nested arrays in Julia"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaArrays/InfiniteArrays.jl"},"JuliaArrays/InfiniteArrays.jl: A Julia package for representing infinite-dimensional arrays"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaArrays/FillArrays.jl"},"JuliaArrays/FillArrays.jl: Julia package for lazily representing matrices filled with a single entry")))),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMatrices"},"JuliaMatrices")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMatrices/BandedMatrices.jl"},"JuliaMatrices/BandedMatrices.jl: A Julia package for representing banded matrices"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMatrices/BlockBandedMatrices.jl"},"JuliaMatrices/BlockBandedMatrices.jl: A Julia package for representing block-banded matrices and banded-block-banded matrices"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMatrices/SpecialMatrices.jl"},"JuliaMatrices/SpecialMatrices.jl: Julia package for working with special matrix types."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMatrices/InfiniteLinearAlgebra.jl"},"JuliaMatrices/InfiniteLinearAlgebra.jl: A Julia repository for linear algebra with infinite matrices")))),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/RalphAS"},"RalphAS")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaLinearAlgebra"},"JuliaLinearAlgebra")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaSparse"},"JuliaSparse")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaLang/SparseArrays.jl"},"JuliaLang/SparseArrays.jl: SparseArrays.jl is a Julia stdlib")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/LabelledArrays.jl"},"SciML/LabelledArrays.jl: Arrays which also have a label for each element for easy scientific machine learning (SciML)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/RecursiveArrayTools.jl"},"SciML/RecursiveArrayTools.jl: Tools for easily handling objects like arrays of arrays and deeper nestings in scientific machine learning (SciML) and other applications")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,"numpy"),(0,l.kt)("p",null,"numba"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/scikit-hep/awkward-1.0"},"scikit-hep/awkward-1.0: Manipulate JSON-like data with NumPy-like idioms.")),(0,l.kt)("h4",{id:"special-matrix-and-arrays"},(0,l.kt)("span",{id:"head18"},"Special Matrix and Arrays")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMatrices/SpecialMatrices.jl"},"JuliaMatrices/SpecialMatrices.jl: Julia package for working with special matrix types.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/LabelledArrays.jl"},"SciML/LabelledArrays.jl: Arrays which also have a label for each element for easy scientific machine learning (SciML)")),(0,l.kt)("h4",{id:"-computation-"},(0,l.kt)("span",{id:"head80"}," Computation ")),(0,l.kt)("p",null,"BLAS and LAPACK",(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaLinearAlgebra/MKL.jl"},"JuliaLinearAlgebra/MKL.jl: Intel MKL linear algebra backend for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mcabbott/Tullio.jl"},"mcabbott/Tullio.jl: \u2140")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaLinearAlgebra/Octavian.jl"},"JuliaLinearAlgebra/Octavian.jl: Multi-threaded BLAS-like library that provides pure Julia matrix multiplication")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaGPU/GemmKernels.jl"},"JuliaGPU/GemmKernels.jl: Flexible and performant GEMM kernels in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MasonProtter/Gaius.jl"},"MasonProtter/Gaius.jl: Divide and Conquer Linear Algebra")),(0,l.kt)("h4",{id:"-eigenvalues-and-solvers-"},(0,l.kt)("span",{id:"head19"}," Eigenvalues and Solvers ")),(0,l.kt)("p",null,"Eig",(0,l.kt)("a",{parentName:"p",href:"https://github.com/nep-pack/NonlinearEigenproblems.jl"},"nep-pack/NonlinearEigenproblems.jl: Nonlinear eigenvalue problems in Julia: Iterative methods and benchmarks")),(0,l.kt)("p",null,"Solver",(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/LinearSolve.jl"},"SciML/LinearSolve.jl: LinearSolve.jl: High-Performance Unified Linear Solvers")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,"Eig:\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaLinearAlgebra/Arpack.jl"},"JuliaLinearAlgebra/Arpack.jl: Julia Wrappers for the arpack-ng Fortran library")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaLinearAlgebra/ArnoldiMethod.jl"},"JuliaLinearAlgebra/ArnoldiMethod.jl: Implicitly Restarted Arnoldi Method, natively in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/Jutho/KrylovKit.jl"},"Jutho/KrylovKit.jl: Krylov methods for linear problems, eigenvalues, singular values and matrix functions")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pablosanjose/QuadEig.jl"},"pablosanjose/QuadEig.jl: Julia implementation of the ",(0,l.kt)("inlineCode",{parentName:"a"},"quadeig")," algorithm for the solution of quadratic matrix pencils")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaApproximation/SpectralMeasures.jl"},"JuliaApproximation/SpectralMeasures.jl: Julia package for finding the spectral measure of structured self adjoint operators")),(0,l.kt)("p",null,"Solver:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaInv/KrylovMethods.jl"},"JuliaInv/KrylovMethods.jl: Simple and fast Julia implementation of Krylov subspace methods for linear systems.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaSmoothOptimizers/Krylov.jl"},"JuliaSmoothOptimizers/Krylov.jl: A Julia Basket of Hand-Picked Krylov Methods")),(0,l.kt)("p",null,"Eig Too",(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaLinearAlgebra/IterativeSolvers.jl"},"JuliaLinearAlgebra/IterativeSolvers.jl: Iterative algorithms for solving linear systems, eigensystems, and singular value problems")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tjdiamandis/RandomizedPreconditioners.jl"},"tjdiamandis/RandomizedPreconditioners.jl")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaLinearAlgebra/RecursiveFactorization.jl"},"JuliaLinearAlgebra/RecursiveFactorization.jl")),(0,l.kt)("p",null,"Spectral methods"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaApproximation/SpectralMeasures.jl"},"JuliaApproximation/SpectralMeasures.jl: Julia package for finding the spectral measure of structured self adjoint operators")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tpapp/SpectralKit.jl"},"tpapp/SpectralKit.jl: Building blocks of spectral methods for Julia.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/markmbaum/BasicInterpolators.jl"},"markmbaum/BasicInterpolators.jl: Basic (+chebyshev) interpolation recipes in Julia")),(0,l.kt)("p",null,"Spasrse Slover"),(0,l.kt)("p",null,"Sparse",(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaSparse/Pardiso.jl"},"JuliaSparse/Pardiso.jl: Calling the PARDISO library from Julia")),(0,l.kt)("p",null,"Sparse",(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaSparse/MKLSparse.jl"},"JuliaSparse/MKLSparse.jl: Make available to Julia the sparse functionality in MKL")),(0,l.kt)("p",null,"Sparse",(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaLang/SuiteSparse.jl"},"JuliaLang/SuiteSparse.jl: Development of SuiteSparse.jl, which ships as part of the Julia standard library.")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.eigs.html?highlight=scipy%20sparse%20linalg%20eigs#scipy.sparse.linalg.eigs"},"scipy.sparse.linalg.eigs \u2014 SciPy v1.7.1 Manual")),(0,l.kt)("h4",{id:"maps-and-operators"},(0,l.kt)("span",{id:"head20"},"Maps and Operators")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/Jutho/LinearMaps.jl"},"Jutho/LinearMaps.jl: A Julia package for defining and working with linear maps, also known as linear transformations or linear operators acting on vectors. The only requirement for a LinearMap is that it can act on a vector (by multiplication) efficiently.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/emmt/LazyAlgebra.jl"},"emmt/LazyAlgebra.jl: A Julia package to extend the notion of vectors and matrices")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaSmoothOptimizers/LinearOperators.jl"},"JuliaSmoothOptimizers/LinearOperators.jl: Linear Operators for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/kul-optec/AbstractOperators.jl"},"kul-optec/AbstractOperators.jl: Abstract operators for large scale optimization in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/matthieugomez/InfinitesimalGenerators.jl"},"matthieugomez/InfinitesimalGenerators.jl: A set of tools to work with Markov Processes")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ranocha/SummationByPartsOperators.jl"},"ranocha/SummationByPartsOperators.jl: A Julia library of summation-by-parts (SBP) operators used in finite difference, Fourier pseudospectral, continuous Galerkin, and discontinuous Galerkin methods to get provably stable semidiscretizations, paying special attention to boundary conditions.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/hakkelt/FunctionOperators.jl"},"hakkelt/FunctionOperators.jl: Julia package that allows writing code close to mathematical notation memory-efficiently.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaApproximation/ApproxFun.jl"},"JuliaApproximation/ApproxFun.jl: Julia package for function approximation")),(0,l.kt)("h4",{id:"matrxi-equations"},(0,l.kt)("span",{id:"head21"},"Matrxi Equations")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/andreasvarga/MatrixEquations.jl"},"andreasvarga/MatrixEquations.jl: Solution of Lyapunov, Sylvester and Riccati matrix equations using Julia")),(0,l.kt)("h4",{id:"kronecker-based-algebra"},(0,l.kt)("span",{id:"head22"},"Kronecker-based algebra")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MichielStock/Kronecker.jl"},"MichielStock/Kronecker.jl: A general-purpose toolbox for efficient Kronecker-based algebra.")),(0,l.kt)("h3",{id:"314platforms-cpu-gpu-and-tpu"},(0,l.kt)("span",{id:"head23"},"3.1.4.Platforms, CPU, GPU and TPU")),(0,l.kt)("p",null,"Julia GPU organization"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaGPU"},"JuliaGPU")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tonybaloney/Pyjion"},"tonybaloney/Pyjion: Pyjion - A JIT for Python based upon CoreCLR")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/numba/numba"},"numba/numba: NumPy aware dynamic Python compiler using LLVM")),(0,l.kt)("h2",{id:"32-optimization"},(0,l.kt)("span",{id:"head24"},"3.2. Optimization")),(0,l.kt)("p",null,'An "learn one equals learn all" Julia Package'),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/GalacticOptim.jl"},"SciML/GalacticOptim.jl: Local, global, and beyond optimization for scientific machine learning (SciML)")),(0,l.kt)("p",null,"Opt Organization:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaOpt"},"JuliaOpt")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaNLSolvers"},"JuliaNLSolvers")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PSORLab"},"Process Systems and Operations Research Laboratory")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaNLSolvers/Optim.jl"},"JuliaNLSolvers/Optim.jl: Optimization functions for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaOpt/NLopt.jl"},"JuliaOpt/NLopt.jl: Package to call the NLopt nonlinear-optimization library from the Julia language")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/robertfeldt/BlackBoxOptim.jl"},"robertfeldt/BlackBoxOptim.jl: Black-box optimization for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jump-dev/MathOptInterface.jl"},"jump-dev/MathOptInterface.jl: An abstraction layer for mathematical optimization solvers.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tpapp/MultistartOptimization.jl"},"tpapp/MultistartOptimization.jl: Multistart optimization methods in Julia.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/bbopt/NOMAD.jl"},"bbopt/NOMAD.jl: Julia interface to the NOMAD blackbox optimization software")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaFirstOrder"},"JuliaFirstOrder")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/NicolasL-S/SpeedMapping.jl"},"NicolasL-S/SpeedMapping.jl: General fixed point mapping acceleration and optimization in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaManifolds/Manopt.jl"},"JuliaManifolds/Manopt.jl: Optimization on Manifolds in Julia")),(0,l.kt)("p",null,"MPEC: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/chkwon/Complementarity.jl"},"chkwon/Complementarity.jl: provides a modeling interface for mixed complementarity problems (MCP) and math programs with equilibrium problems (MPEC) via JuMP")),(0,l.kt)("p",null,"Open Optimizers",(0,l.kt)("a",{parentName:"p",href:"file:///F:/Zotero/Zotero/storage/RJ96NPGG/downloading.html"},"Download \u2013 COIN-OR: Computational Infrastructure for Operations Research")),(0,l.kt)("h3",{id:"321-metaheuristic"},(0,l.kt)("span",{id:"head25"},"3.2.1. Metaheuristic")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jmejia8/Metaheuristics.jl"},"jmejia8/Metaheuristics.jl: High performance metaheuristics for optimization purely coded in Julia.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ac-tuwien/MHLib.jl"},"ac-tuwien/MHLib.jl: MHLib.jl - A Toolbox for Metaheuristics and Hybrid Optimization Methods in Julia")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/guofei9987/scikit-opt"},"guofei9987/scikit-opt: Genetic Algorithm, Particle Swarm Optimization, Simulated Annealing, Ant Colony Optimization Algorithm,Immune Algorithm, Artificial Fish Swarm Algorithm, Differential Evolution and TSP(Traveling salesman)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/scikit-optimize/scikit-optimize"},"scikit-optimize/scikit-optimize: Sequential model-based optimization with a ",(0,l.kt)("inlineCode",{parentName:"a"},"scipy.optimize")," interface")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ac-tuwien/pymhlib"},"ac-tuwien/pymhlib: pymhlib - A Toolbox for Metaheuristics and Hybrid Optimization Methods")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cvxpy/cvxpy"},"cvxpy/cvxpy: A Python-embedded modeling language for convex optimization problems.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/coin-or/pulp"},"coin-or/pulp: A python Linear Programming API")),(0,l.kt)("h3",{id:"322-evolution-stragegy"},(0,l.kt)("span",{id:"head26"},"3.2.2. Evolution Stragegy")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/wildart/Evolutionary.jl"},"wildart/Evolutionary.jl: Evolutionary & genetic algorithms for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/d9w/Cambrian.jl"},"d9w/Cambrian.jl: An Evolutionary Computation framework")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jbrea/CMAEvolutionStrategy.jl"},"jbrea/CMAEvolutionStrategy.jl")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/AStupidBear/GCMAES.jl"},"AStupidBear/GCMAES.jl: Gradient-based Covariance Matrix Adaptation Evolutionary Strategy for Real Blackbox Optimization")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/itsdfish/DifferentialEvolutionMCMC.jl"},"itsdfish/DifferentialEvolutionMCMC.jl: A Julia package for Differential Evolution MCMC")),(0,l.kt)("h3",{id:"323-genetic-algorithms"},(0,l.kt)("span",{id:"head27"},"3.2.3. Genetic Algorithms")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/d9w/CartesianGeneticProgramming.jl"},"d9w/CartesianGeneticProgramming.jl: Cartesian Genetic Programming for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/WestleyArgentum/GeneticAlgorithms.jl"},"WestleyArgentum/GeneticAlgorithms.jl: A lightweight framework for writing genetic algorithms in Julia")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/trevorstephens/gplearn"},"trevorstephens/gplearn: Genetic Programming in Python, with a scikit-learn inspired API")),(0,l.kt)("h3",{id:"324-nonconvex"},(0,l.kt)("span",{id:"head28"},"3.2.4. Nonconvex")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaNonconvex/Nonconvex.jl"},"JuliaNonconvex/Nonconvex.jl: Toolbox for non-convex constrained optimization.")),(0,l.kt)("h3",{id:"325-first-order-methods"},"3.2.5. First Order Methods"),(0,l.kt)("p",null,"Proximal\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/kul-optec"},"OPTEC")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/kul-optec/CIAOAlgorithms.jl"},"kul-optec/CIAOAlgorithms.jl: Coordinate and Incremental Aggregated Optimization Algorithms")),(0,l.kt)("h3",{id:"326-second-order-methods"},"3.2.6. Second Order Methods"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/search?o=desc&q=stochastic+quasi-newton&s=updated&type=Repositories"},"Search \xb7 stochastic quasi-newton")),(0,l.kt)("p",null,"Good",(0,l.kt)("a",{parentName:"p",href:"https://github.com/hiroyuki-kasai/SGDLibrary"},"hiroyuki-kasai/SGDLibrary: MATLAB/Octave library for stochastic optimization algorithms: Version 1.0.20")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gowerrobert/StochOpt.jl"},"gowerrobert/StochOpt.jl: A suite of stochastic optimization methods for solving the empirical risk minimization problem.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pcmoritz/slbfgs"},"pcmoritz/slbfgs: Stochastic LBFGS")),(0,l.kt)("h2",{id:"33-optimal-control"},(0,l.kt)("span",{id:"head29"},"3.3. Optimal Control")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/eleurent/phd-bibliography"},"eleurent/phd-bibliography: References on Optimal Control, Reinforcement Learning and Motion Planning")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://mintoc.de/index.php/Main_Page"},"mintOC")),(0,l.kt)("p",null,"Julia: Jump + InfiniteOpt"),(0,l.kt)("p",null,"Jump is powerfull!!!"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jump-dev/JuMP.jl"},"jump-dev/JuMP.jl: Modeling language for Mathematical Optimization (linear, mixed-integer, conic, semidefinite, nonlinear)")),(0,l.kt)("p",null,"InfiniteOpt is powerfull!!!"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pulsipher/InfiniteOpt.jl"},"pulsipher/InfiniteOpt.jl: An intuitive modeling interface for infinite-dimensional optimization problems.")),(0,l.kt)("p",null,"GAMS unified software",(0,l.kt)("a",{parentName:"p",href:"https://www.gams.com/latest/docs/index.html"},"GAMS Documentation Center")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/GAMS-dev/gams.jl"},"GAMS-dev/gams.jl: A MathOptInterface Optimizer to solve JuMP models using GAMS")),(0,l.kt)("p",null,"Matlab: Yalmip unified",(0,l.kt)("a",{parentName:"p",href:"https://yalmip.github.io/"},"YALMIP")),(0,l.kt)("p",null,"Python: unified",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Pyomo/pyomo"},"Pyomo/pyomo: An object-oriented algebraic modeling language in Python for structured optimization problems.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.gams.com/latest/docs/S_MAIN.html"},"Solver Manuals")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/martinbiel/StochasticPrograms.jl"},"martinbiel/StochasticPrograms.jl: Julia package for formulating and analyzing stochastic recourse models.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/odow/SDDP.jl"},"odow/SDDP.jl: Stochastic Dual Dynamic Programming in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PSORLab/EAGO.jl"},"PSORLab/EAGO.jl: A development environment for robust and global optimization")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaSmoothOptimizers/PDENLPModels.jl"},"JuliaSmoothOptimizers/PDENLPModels.jl: A NLPModel API for optimization problems with PDE-constraints")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaControl"},"JuliaControl")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMPC/NLOptControl.jl"},"JuliaMPC/NLOptControl.jl: nonlinear control optimization tool")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,"casadi is powerful!"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/python-control/python-control"},"python-control/python-control: The Python Control Systems Library is a Python module that implements basic operations for analysis and design of feedback control systems.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/Shunichi09/PythonLinearNonlinearControl"},"Shunichi09/PythonLinearNonlinearControl: PythonLinearNonLinearControl is a library implementing the linear and nonlinear control theories in python.")),(0,l.kt)("p",null,"Matlab:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/OpenOCL/OpenOCL"},"OpenOCL/OpenOCL: Open Optimal Control Library for Matlab. Trajectory Optimization and non-linear Model Predictive Control (MPC) toolbox.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jkoendev/optimal-control-literature-software"},"jkoendev/optimal-control-literature-software: List of literature and software for optimal control and numerical optimization.")),(0,l.kt)("h2",{id:"34-bayesian-inference"},(0,l.kt)("span",{id:"head30"},"3.4. Bayesian Inference")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/StatisticalRethinkingJulia"},"StatisticalRethinkingJulia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/StanJulia"},"StanJulia")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/TuringLang"},"The Turing Language")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cscherrer/Soss.jl"},"cscherrer/Soss.jl: Probabilistic programming via source rewriting")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/probcomp/Gen.jl"},"probcomp/Gen.jl: A general-purpose probabilistic programming system with programmable inference")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/LAMPSPUC"},"Laboratory of Applied Mathematical Programming and Statistics")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/biaslab"},"BIASlab")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/StatisticalRethinkingJulia/StatisticalRethinking.jl"},"StatisticalRethinkingJulia/StatisticalRethinking.jl: Julia package with selected functions in the R package ",(0,l.kt)("inlineCode",{parentName:"a"},"rethinking"),". Used in the SR2... projects.")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pymc-devs/pymc"},"pymc-devs/pymc: Probabilistic Programming in Python: Bayesian Modeling and Probabilistic Machine Learning with Aesara")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pints-team/pints"},"pints-team/pints: Probabilistic Inference on Noisy Time Series")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pyro-ppl/pyro"},"pyro-ppl/pyro: Deep universal probabilistic programming with Python and PyTorch")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pyro-ppl/numpyro"},"pyro-ppl/numpyro: Probabilistic programming with NumPy powered by JAX for autograd and JIT compilation to GPU/TPU/CPU.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/blackjax-devs/blackjax"},"blackjax-devs/blackjax: BlackJAX is a sampling library designed for ease of use, speed and modularity.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tensorflow/probability"},"tensorflow/probability: Probabilistic reasoning and statistical analysis in TensorFlow")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/google/edward2"},"google/edward2: A simple probabilistic programming language.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/thu-ml/zhusuan"},"thu-ml/zhusuan: A probabilistic programming library for Bayesian deep learning, generative models, based on Tensorflow")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jmschrei/pomegranate"},"jmschrei/pomegranate: Fast, flexible and easy to use probabilistic modelling in Python.")),(0,l.kt)("h3",{id:"341-mcmc"},(0,l.kt)("span",{id:"head31"},"3.4.1. MCMC")),(0,l.kt)("p",null,"Methods like HMC, SGLD are Covered by above-mentioned packages."),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mauro3/KissMCMC.jl"},"mauro3/KissMCMC.jl: Keep it simple, stupid, MCMC")),(0,l.kt)("p",null,"Nice",(0,l.kt)("a",{parentName:"p",href:"https://github.com/scheidan/BarkerMCMC.jl"},"scheidan/BarkerMCMC.jl: gradient based MCMC sampler")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/BigBayes/SGMCMC.jl"},"BigBayes/SGMCMC.jl: Stochastic Gradient Markov Chain Monte Carlo and Optimisation")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tpapp/DynamicHMC.jl"},"tpapp/DynamicHMC.jl: Implementation of robust dynamic Hamiltonian Monte Carlo methods (NUTS) in Julia.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/madsjulia/AffineInvariantMCMC.jl"},"madsjulia/AffineInvariantMCMC.jl: Affine Invariant Markov Chain Monte Carlo (MCMC) Ensemble sampler")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/TuringLang/EllipticalSliceSampling.jl"},"TuringLang/EllipticalSliceSampling.jl: Julia implementation of elliptical slice sampling.")),(0,l.kt)("p",null,"Nested Sampling",(0,l.kt)("a",{parentName:"p",href:"https://github.com/TuringLang/NestedSamplers.jl"},"TuringLang/NestedSamplers.jl: Implementations of single and multi-ellipsoid nested sampling")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/bat/UltraNest.jl"},"bat/UltraNest.jl: Julia wrapper for UltraNest: advanced nested sampling for model comparison and parameter estimation")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/itsdfish/DifferentialEvolutionMCMC.jl"},"itsdfish/DifferentialEvolutionMCMC.jl: A Julia package for Differential Evolution MCMC")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/AdamCobb/hamiltorch"},"AdamCobb/hamiltorch: PyTorch-based library for Riemannian Manifold Hamiltonian Monte Carlo (RMHMC) and inference in Bayesian neural networks")),(0,l.kt)("p",null,"Review",(0,l.kt)("a",{parentName:"p",href:"https://github.com/jeremiecoullon/SGMCMCJax"},"jeremiecoullon/SGMCMCJax: Lightweight library of stochastic gradient MCMC algorithms written in JAX.")),(0,l.kt)("p",null,"Nested Sampling",(0,l.kt)("a",{parentName:"p",href:"https://github.com/joshspeagle/dynesty"},"joshspeagle/dynesty: Dynamic Nested Sampling package for computing Bayesian posteriors and evidences")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JohannesBuchner/UltraNest"},"JohannesBuchner/UltraNest: Fit and compare complex models reliably and rapidly. Advanced nested sampling.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ruqizhang/csgmcmc"},"ruqizhang/csgmcmc: Cyclical Stochastic Gradient MCMC for Bayesian Deep Learning")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tensorflow/addons/issues/2469"},"Custom Tensorflow optimizer cSGLD (Stochastic Langevin Dynamics) in TF2: correct update ops? \xb7 Issue #2469 \xb7 tensorflow/addons")),(0,l.kt)("h3",{id:"342-approximate-bayesian-computation-abc"},(0,l.kt)("span",{id:"head32"},"3.4.2. Approximate Bayesian Computation (ABC)")),(0,l.kt)("p",null,"Also called likelihood free or simulation based methods"),(0,l.kt)("p",null,"Review",(0,l.kt)("a",{parentName:"p",href:"https://github.com/sbi-benchmark/sbibm"},"sbi-benchmark/sbibm: Simulation-based inference benchmark")),(0,l.kt)("p",null,"Julia: (few)"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaApproxInference"},"JuliaApproxInference")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tanhevg/GpABC.jl"},"tanhevg/GpABC.jl")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/marcjwilliams1/ApproxBayes.jl"},"marcjwilliams1/ApproxBayes.jl: Approximate Bayesian Computation (ABC) algorithms for likelihood free inference in julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/francescoalemanno/KissABC.jl"},"francescoalemanno/KissABC.jl: Pure julia implementation of Multiple Affine Invariant Sampling for efficient Approximate Bayesian Computation")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/elfi-dev/elfi"},"elfi-dev/elfi: ELFI - Engine for Likelihood-Free Inference")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/eth-cscs/abcpy"},"eth-cscs/abcpy: ABCpy package")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pints-team/pints"},"pints-team/pints: Probabilistic Inference on Noisy Time Series")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mackelab/sbi"},"mackelab/sbi: Simulation-based inference in PyTorch")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ICB-DCM/pyABC"},"ICB-DCM/pyABC: distributed, likelihood-free inference")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/diyabc/abcranger"},"diyabc/abcranger: ABC random forests for model choice and parameter estimation, pure C++ implementation")),(0,l.kt)("h3",{id:"343-data-assimilation-smc-particles-filter"},(0,l.kt)("span",{id:"head33"},"3.4.3. Data Assimilation (SMC, particles filter)")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/Alexander-Barth/DataAssim.jl"},"Alexander-Barth/DataAssim.jl: Implementation of various ensemble Kalman Filter data assimilation methods in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/baggepinnen/LowLevelParticleFilters.jl"},"baggepinnen/LowLevelParticleFilters.jl: Simple particle/kalman filtering, smoothing and parameter estimation")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaGNSS/KalmanFilters.jl"},"JuliaGNSS/KalmanFilters.jl: Various Kalman Filters: KF, UKF, AUKF and their Square root variant")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/CliMA/EnsembleKalmanProcesses.jl"},"CliMA/EnsembleKalmanProcesses.jl: Implements Optimization and approximate uncertainty quantification algorithms, Ensemble Kalman Inversion, and Ensemble Kalman Processes.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/FRBNY-DSGE/StateSpaceRoutines.jl"},"FRBNY-DSGE/StateSpaceRoutines.jl: Package implementing common state-space routines.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/simsurace/FeedbackParticleFilters.jl"},"simsurace/FeedbackParticleFilters.jl: A Julia package that provides (feedback) particle filters for nonlinear stochastic filtering and data assimilation problems")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mjb3/DiscretePOMP.jl"},"mjb3/DiscretePOMP.jl: Bayesian inference for Discrete state-space Partially Observed Markov Processes in Julia. See the docs:")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/nchopin/particles"},"nchopin/particles: Sequential Monte Carlo in python")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/rlabbe/filterpy"},"rlabbe/filterpy: Python Kalman filtering and optimal estimation library. Implements Kalman filter, particle filter, Extended Kalman filter, Unscented Kalman filter, g-h (alpha-beta), least squares, H Infinity, smoothers, and more. Has companion book 'Kalman and Bayesian Filters in Python'.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tingiskhan/pyfilter"},"tingiskhan/pyfilter: Particle filtering and sequential parameter inference in Python")),(0,l.kt)("h3",{id:"344-variational-inference"},(0,l.kt)("span",{id:"head34"},"3.4.4. Variational Inference")),(0,l.kt)("p",null,"SVGD",(0,l.kt)("a",{parentName:"p",href:"https://github.com/search?q=Stein+Variational+Gradient+Descent"},"Search \xb7 Stein Variational Gradient Descent"),"Also see pyro, Stein method part"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/Red-Portal/KLpqVI.jl"},"Red-Portal/KLpqVI.jl")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/bat/MGVI.jl"},"bat/MGVI.jl: Metric Gaussian Variational Inference")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/TuringLang/AdvancedVI.jl"},"TuringLang/AdvancedVI.jl: A library for variational Bayesian methods in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ngiann/ApproximateVI.jl"},"ngiann/ApproximateVI.jl: Approximate variational inference in Julia")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("h3",{id:"345-gaussion-non-gaussion-and-kernel"},(0,l.kt)("span",{id:"head35"},"3.4.5. Gaussion, non-Gaussion and Kernel")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaGaussianProcesses"},"Gaussian Processes for Machine Learning in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/LAMPSPUC"},"Laboratory of Applied Mathematical Programming and Statistics")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaRobotics"},"JuliaRobotics")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaStats/KernelDensity.jl"},"JuliaStats/KernelDensity.jl: Kernel density estimators for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaRobotics/KernelDensityEstimate.jl"},"JuliaRobotics/KernelDensityEstimate.jl: Kernel Density Estimate with product approximation using multiscale Gibbs sampling")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/theogf/AugmentedGaussianProcesses.jl"},"theogf/AugmentedGaussianProcesses.jl: Gaussian Process package based on data augmentation, sparsity and natural gradients")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaGaussianProcesses/TemporalGPs.jl"},"JuliaGaussianProcesses/TemporalGPs.jl: Fast inference for Gaussian processes in problems involving time")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aterenin/SparseGaussianProcesses.jl"},"aterenin/SparseGaussianProcesses.jl: A Julia implementation of sparse Gaussian processes via path-wise doubly stochastic variational inference.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PieterjanRobbe/GaussianRandomFields.jl"},"PieterjanRobbe/GaussianRandomFields.jl: A package for Gaussian random field generation in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaGaussianProcesses/Stheno.jl"},"JuliaGaussianProcesses/Stheno.jl: Probabilistic Programming with Gaussian processes in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/STOR-i/GaussianProcesses.jl"},"STOR-i/GaussianProcesses.jl: A Julia package for Gaussian Processes")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cornellius-gp/gpytorch"},"cornellius-gp/gpytorch: A highly efficient and modular implementation of Gaussian Processes in PyTorch")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/GPflow/GPflow"},"GPflow/GPflow: Gaussian processes in TensorFlow")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SheffieldML/GPy"},"SheffieldML/GPy: Gaussian processes framework in python")),(0,l.kt)("h3",{id:"346-bayesian-optimization"},(0,l.kt)("span",{id:"head36"},"3.4.6. Bayesian Optimization")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/Surrogates.jl"},"SciML/Surrogates.jl: Surrogate modeling and optimization for scientific machine learning (SciML)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jbrea/BayesianOptimization.jl"},"jbrea/BayesianOptimization.jl: Bayesian optimization for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/baggepinnen/Hyperopt.jl"},"baggepinnen/Hyperopt.jl: Hyperparameter optimization in Julia.")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fmfn/BayesianOptimization"},"fmfn/BayesianOptimization: A Python implementation of global optimization with gaussian processes.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pytorch/botorch"},"pytorch/botorch: Bayesian optimization in PyTorch")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/optuna/optuna"},"optuna/optuna: A hyperparameter optimization framework")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/huawei-noah/HEBO"},"huawei-noah/HEBO: Bayesian optimisation library developped by Huawei Noah's Ark Library")),(0,l.kt)("h3",{id:"347-information-theory"},(0,l.kt)("span",{id:"head37"},"3.4.7. Information theory")),(0,l.kt)("p",null,"Julia:\nentropy and kldivengence for distributions or vectors can be seen in Distributions.jl"),(0,l.kt)("p",null,"KL divergence for functions",(0,l.kt)("a",{parentName:"p",href:"https://github.com/RafaelArutjunjan/InformationGeometry.jl"},"RafaelArutjunjan/InformationGeometry.jl: Methods for computational information geometry")),(0,l.kt)("p",null,"not maintained",(0,l.kt)("a",{parentName:"p",href:"https://github.com/kzahedi/Shannon.jl"},"kzahedi/Shannon.jl: Entropy, Mutual Information, KL-Divergence related to Shannon's information theory and functions to binarize data")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gragusa/Divergences.jl"},"gragusa/Divergences.jl: A Julia package for evaluation of divergences between distributions")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/Tchanders/InformationMeasures.jl"},"Tchanders/InformationMeasures.jl: Entropy, mutual information and higher order measures from information theory, with various estimators and discretisation methods.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDynamics/TransferEntropy.jl"},"JuliaDynamics/TransferEntropy.jl: Transfer entropy (conditional mutual information) estimators for the Julia language")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cynddl/Discreet.jl"},"cynddl/Discreet.jl: A Julia package to estimate discrete entropy and mutual information")),(0,l.kt)("h3",{id:"348-uncertainty"},(0,l.kt)("span",{id:"head38"},"3.4.8. Uncertainty")),(0,l.kt)("p",null,"Uncertainty propogation"),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaPhysics/Measurements.jl"},"JuliaPhysics/Measurements.jl: Error propagation calculator and library for physical measurements. It supports real and complex numbers with uncertainty, arbitrary precision calculations, operations with arrays, and numerical integration.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/baggepinnen/MonteCarloMeasurements.jl"},"baggepinnen/MonteCarloMeasurements.jl: Propagation of distributions by Monte-Carlo sampling: Real number types with uncertainty represented by samples.")),(0,l.kt)("p",null,"Review",(0,l.kt)("a",{parentName:"p",href:"https://book.sciml.ai/notes/19/"},"Uncertainty Programming, Generalized Uncertainty Quantification")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/AnderGray/MomentArithmetic.jl"},"AnderGray/MomentArithmetic.jl: Rigorous moment propagation with partial information about moments and dependencies in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mschauer/Mitosis.jl"},"mschauer/Mitosis.jl: Automatic probabilistic programming for scientific machine learning and dynamical models")),(0,l.kt)("p",null,"Python"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/uncertainty-toolbox/uncertainty-toolbox"},"uncertainty-toolbox/uncertainty-toolbox: A python toolbox for predictive uncertainty quantification, calibration, metrics, and visualization")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pyro-ppl/funsor"},"pyro-ppl/funsor: Functional tensors for probabilistic programming")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/lebigot/uncertainties/"},'lebigot/uncertainties: Transparent calculations with uncertainties on the quantities involved (aka "error propagation"); calculation of derivatives.')),(0,l.kt)("h3",{id:"349-casual"},(0,l.kt)("span",{id:"head39"},"3.4.9. Casual")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/zenna/Omega.jl"},"zenna/Omega.jl: Causal, Higher-Order, Probabilistic Programming")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mschauer/CausalInference.jl"},"mschauer/CausalInference.jl: Causal inference, graphical models and structure learning with the PC algorithm.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDynamics/CausalityTools.jl"},"JuliaDynamics/CausalityTools.jl: Algorithms for causal inference and the detection of dynamical coupling from time series, and for approximation of the transfer operator and invariant measures.")),(0,l.kt)("p",null,"python"),(0,l.kt)("p",null,"Review: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/rguo12/awesome-causality-algorithms"},"rguo12/awesome-causality-algorithms: An index of algorithms for learning causality with data")),(0,l.kt)("h3",{id:"3410-sampling"},(0,l.kt)("span",{id:"head40"},"3.4.10. Sampling")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MrUrq/LatinHypercubeSampling.jl"},"MrUrq/LatinHypercubeSampling.jl: Julia package for the creation of optimised Latin Hypercube Sampling Plans")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/QuasiMonteCarlo.jl"},"SciML/QuasiMonteCarlo.jl: Lightweight and easy generation of quasi-Monte Carlo sequences with a ton of different methods on one API for easy parameter exploration in scientific machine learning (SciML)")),(0,l.kt)("h3",{id:"3411-message-passing"},"3.4.11 Message Passing"),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/biaslab/ReactiveMP.jl"},"biaslab/ReactiveMP.jl: Julia package for automatic Bayesian inference on a factor graph with reactive message passing")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/biaslab/ForneyLab.jl"},"biaslab/ForneyLab.jl: Julia package for automatically generating Bayesian inference algorithms through message passing on Forney-style factor graphs.")),(0,l.kt)("h2",{id:"35-machine-learning-and-deep-learning"},(0,l.kt)("span",{id:"head41"},"3.5. Machine Learning and Deep Learning")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,"Survey ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/ritchieng/the-incredible-pytorch?ref=pythonrepo.com#GANsVAEsandAEs"},"ritchieng/the-incredible-pytorch at pythonrepo.com")),(0,l.kt)("h3",{id:"351-machine-learning"},(0,l.kt)("span",{id:"head42"},"3.5.1. Machine Learning")),(0,l.kt)("p",null,"Julia: MLJ is enough"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/alan-turing-institute/MLJ.jl"},"alan-turing-institute/MLJ.jl: A Julia machine learning framework")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaML"},"JuliaML")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaAI"},"JuliaAI")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/Evovest/EvoTrees.jl"},"Evovest/EvoTrees.jl: Boosted trees in Julia")),(0,l.kt)("p",null,"Dimention Reduction:",(0,l.kt)("a",{parentName:"p",href:"https://github.com/madeleineudell/LowRankModels.jl"},"madeleineudell/LowRankModels.jl: LowRankModels.jl is a julia package for modeling and fitting generalized low rank models.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaStats/MultivariateStats.jl"},"JuliaStats/MultivariateStats.jl: A Julia package for multivariate statistics and data analysis (e.g. dimension reduction)")),(0,l.kt)("p",null,"Linear Regression",(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaAI/MLJLinearModels.jl"},"JuliaAI/MLJLinearModels.jl: Generalized Linear Regressions Models (penalized regressions, robust regressions, ...)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gerdm/pknn.jl"},"gerdm/pknn.jl: Probabilistic k-nearest neighbours")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/IBM/AutoMLPipeline.jl"},"IBM/AutoMLPipeline.jl: A package that makes it trivial to create and evaluate machine learning pipeline architectures.")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://scikit-learn.org/stable/"},"scikit-learn: machine learning in Python \u2014 scikit-learn 1.0.1 documentation")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/DistrictDataLabs/yellowbrick"},"DistrictDataLabs/yellowbrick: Visual analysis and diagnostic tools to facilitate machine learning model selection.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/automl/auto-sklearn"},"automl/auto-sklearn: Automated Machine Learning with scikit-learn")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/h2oai/h2o-3"},"h2oai/h2o-3: H2O is an Open Source, Distributed, Fast & Scalable Machine Learning Platform: Deep Learning, Gradient Boosting (GBM) & XGBoost, Random Forest, Generalized Linear Modeling (GLM with Elastic Net), K-Means, PCA, Generalized Additive Models (GAM), RuleFit, Support Vector Machine (SVM), Stacked Ensembles, Automatic Machine Learning (AutoML), etc.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pycaret/pycaret"},"pycaret/pycaret: An open-source, low-code machine learning library in Python")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/nubank/fklearn"},"nubank/fklearn: fklearn: Functional Machine Learning")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/wecarsoniv/augmented-pca"},"wecarsoniv/augmented-pca: Repository for the AugmentedPCA Python package.")),(0,l.kt)("p",null,"Data Generation"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/snorkel-team/snorkel"},"snorkel-team/snorkel: A system for quickly generating training data with weak supervision")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/lk-geimfari/mimesis"},"lk-geimfari/mimesis: Mimesis is a high-performance fake data generator for Python, which provides data for a variety of purposes in a variety of languages.")),(0,l.kt)("h3",{id:"352-deep-learning"},(0,l.kt)("span",{id:"head43"},"3.5.2. Deep Learning")),(0,l.kt)("p",null,"Julia: Flux and Knet"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/FluxML/Flux.jl"},"FluxML/Flux.jl: Relax! Flux is the ML library that doesn't make you tensor")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/sdobber/FluxArchitectures.jl"},"sdobber/FluxArchitectures.jl: Complex neural network examples for Flux.jl")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/denizyuret/Knet.jl"},"denizyuret/Knet.jl: Ko\xe7 University deep learning framework.")),(0,l.kt)("p",null,"Python: Jax, Pytorch, Tensorflow"),(0,l.kt)("p",null,"Review",(0,l.kt)("a",{parentName:"p",href:"https://github.com/n2cholas/awesome-jax"},"n2cholas/awesome-jax: JAX - A curated list of resources https://github.com/google/jax")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/google/jax"},"google/jax: Composable transformations of Python+NumPy programs: differentiate, vectorize, JIT to GPU/TPU, and more")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pytorch/pytorch"},"pytorch/pytorch: Tensors and Dynamic neural networks in Python with strong GPU acceleration")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tensorflow/tensorflow"},"tensorflow/tensorflow: An Open Source Machine Learning Framework for Everyone")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/catalyst-team/catalyst"},"catalyst-team/catalyst: Accelerated deep learning R&D")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/murufeng/awesome_lightweight_networks"},"murufeng/awesome_lightweight_networks: MobileNetV1-V2\uff0cMobileNeXt\uff0cGhostNet\uff0cAdderNet\uff0cShuffleNetV1-V2\uff0cMobile+ViT etc. \u2b50\u2b50\u2b50\u2b50\u2b50")),(0,l.kt)("p",null,"Review: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Chen-Cai-OSU/awesome-equivariant-network"},"Chen-Cai-OSU/awesome-equivariant-network: Paper list for equivariant neural network")),(0,l.kt)("h3",{id:"353-reinforce-learning"},(0,l.kt)("span",{id:"head44"},"3.5.3. Reinforce Learning")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaPOMDP"},"JuliaPOMDP")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaReinforcementLearning"},"JuliaReinforcementLearning")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ray-project/ray"},"ray-project/ray: An open source framework that provides a simple, universal API for building distributed applications. Ray is packaged with RLlib, a scalable reinforcement learning library, and Tune, a scalable hyperparameter tuning library.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tensorlayer/tensorlayer"},"tensorlayer/tensorlayer: Deep Learning and Reinforcement Learning Library for Scientists and Engineers \ud83d\udd25")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pfnet/pfrl"},"pfnet/pfrl: PFRL: a PyTorch-based deep reinforcement learning library")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/thu-ml/tianshou"},"thu-ml/tianshou: An elegant PyTorch deep reinforcement learning library.")),(0,l.kt)("h3",{id:"354-gnn"},(0,l.kt)("span",{id:"head45"},"3.5.4. GNN")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/CarloLucibello/GraphNeuralNetworks.jl"},"CarloLucibello/GraphNeuralNetworks.jl: Graph Neural Networks in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/FluxML/GeometricFlux.jl"},"FluxML/GeometricFlux.jl: Geometric Deep Learning for Flux")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pyg-team/pytorch_geometric"},"pyg-team/pytorch_geometric: Graph Neural Network Library for PyTorch")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/benedekrozemberczki/pytorch_geometric_temporal"},"benedekrozemberczki/pytorch_geometric_temporal: PyTorch Geometric Temporal: Spatiotemporal Signal Processing with Neural Machine Learning Models (CIKM 2021)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/dmlc/dgl"},"dmlc/dgl: Python package built to ease deep learning on graph, on top of existing DL frameworks.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/THUDM/cogdl"},"THUDM/cogdl: CogDL: An Extensive Toolkit for Deep Learning on Graphs")),(0,l.kt)("h3",{id:"355-transformer"},(0,l.kt)("span",{id:"head46"},"3.5.5. Transformer")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/chengchingwen/Transformers.jl"},"chengchingwen/Transformers.jl: Julia Implementation of Transformer models")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/huggingface/transformers"},"huggingface/transformers: \ud83e\udd17 Transformers: State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX.")),(0,l.kt)("h3",{id:"356-transfer-learning"},(0,l.kt)("span",{id:"head47"},"3.5.6. Transfer Learning")),(0,l.kt)("p",null,"Survey",(0,l.kt)("a",{parentName:"p",href:"https://github.com/jindongwang/transferlearning"},"jindongwang/transferlearning: Transfer learning / domain adaptation / domain generalization / multi-task learning etc. papers, codes. datasets, applications, tutorials.-\u8fc1\u79fb\u5b66\u4e60")),(0,l.kt)("h3",{id:"357-neural-tangent"},(0,l.kt)("span",{id:"head48"},"3.5.7. Neural Tangent")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/google/neural-tangents"},"google/neural-tangents: Fast and Easy Infinite Neural Networks in Python")),(0,l.kt)("h3",{id:"358-visulization"},(0,l.kt)("span",{id:"head49"},"3.5.8. Visulization")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network"},"ashishpatel26/Tools-to-Design-or-Visualize-Architecture-of-Neural-Network: Tools to Design or Visualize Architecture of Neural Network")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/julrog/nn_vis"},"julrog/nn_vis: A project for processing neural networks and rendering to gain insights on the architecture and parameters of a model through a decluttered representation.")),(0,l.kt)("p",null,"PowerPoints",(0,l.kt)("a",{parentName:"p",href:"https://github.com/dair-ai/ml-visuals"},"dair-ai/ml-visuals: \ud83c\udfa8 ML Visuals contains figures and templates which you can reuse and customize to improve your scientific writing.")),(0,l.kt)("h3",{id:"semi-supervised-learning"},"Semi-supervised Learning"),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/TorchSSL/TorchSSL"},"TorchSSL/TorchSSL: A PyTorch-based library for semi-supervised learning (NeurIPS'21)")),(0,l.kt)("h2",{id:"36-probablistic-machine-learning-and-deep-learning"},(0,l.kt)("span",{id:"head50"},"3.6. Probablistic Machine Learning and Deep Learning")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mcosovic/FactorGraph.jl"},"mcosovic/FactorGraph.jl: The FactorGraph package provides the set of different functions to perform inference over the factor graph with continuous or discrete random variables using the belief propagation algorithm.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/stefan-m-lenz/BoltzmannMachines.jl"},"stefan-m-lenz/BoltzmannMachines.jl: A Julia package for training and evaluating multimodal deep Boltzmann machines")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/biaslab"},"BIASlab")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/biaslab/ReactiveMP.jl"},"biaslab/ReactiveMP.jl: Julia package for automatic Bayesian inference on a factor graph with reactive message passing")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/probml"},"Probabilistic machine learning")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/thu-ml/zhusuan"},"thu-ml/zhusuan: A probabilistic programming library for Bayesian deep learning, generative models, based on Tensorflow")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/OATML/bdl-benchmarks"},"OATML/bdl-benchmarks: Bayesian Deep Learning Benchmarks")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pgmpy/pgmpy"},"pgmpy/pgmpy: Python Library for learning (Structure and Parameter) and inference (Probabilistic and Causal) in Bayesian Networks.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/scikit-learn-contrib/imbalanced-learn"},"scikit-learn-contrib/imbalanced-learn: A Python Package to Tackle the Curse of Imbalanced Datasets in Machine Learning")),(0,l.kt)("h3",{id:"361-gan"},(0,l.kt)("span",{id:"head51"},"3.6.1. GAN")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"file:///F:/Zotero/Zotero/storage/DMJ4DGLN/torchgan.html"},"torchgan/torchgan: Research Framework for easy and efficient training of GANs based on Pytorch")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/kwotsin/mimicry"},"kwotsin/mimicry: [CVPR 2020 Workshop] A PyTorch GAN library that reproduces research results for popular GANs.")),(0,l.kt)("h3",{id:"362-normilization-flows"},(0,l.kt)("span",{id:"head52"},"3.6.2. Normilization Flows")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/TuringLang/Bijectors.jl"},"TuringLang/Bijectors.jl: Implementation of normalising flows and constrained random variable transformations")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/slimgroup/InvertibleNetworks.jl"},"slimgroup/InvertibleNetworks.jl: A Julia framework for invertible neural networks")),(0,l.kt)("p",null,"FFJord is impleted in DiffEqFlux.jl"),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,"Survey",(0,l.kt)("a",{parentName:"p",href:"https://github.com/janosh/awesome-normalizing-flows"},"janosh/awesome-normalizing-flows: A list of awesome resources on normalizing flows.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/RameenAbdal/StyleFlow"},"RameenAbdal/StyleFlow: StyleFlow: Attribute-conditioned Exploration of StyleGAN-generated Images using Conditional Continuous Normalizing Flows (ACM TOG 2021)")),(0,l.kt)("h3",{id:"363-vae"},(0,l.kt)("span",{id:"head53"},"3.6.3. VAE")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://pyro.ai/examples/vae.html"},"Variational Autoencoders \u2014 Pyro Tutorials 1.7.0 documentation")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/AntixK/PyTorch-VAE"},"AntixK/PyTorch-VAE: A Collection of Variational Autoencoders (VAE) in PyTorch.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/timsainb/tensorflow2-generative-models"},"timsainb/tensorflow2-generative-models: Implementations of a number of generative models in Tensorflow 2. GAN, VAE, Seq2Seq, VAEGAN, GAIA, Spectrogram Inversion. Everything is self contained in a jupyter notebook for easy export to colab.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/altosaar/variational-autoencoder"},"altosaar/variational-autoencoder: Variational autoencoder implemented in tensorflow and pytorch (including inverse autoregressive flow)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/subinium/Pytorch-AutoEncoders?ref=pythonrepo.com"},"subinium/Pytorch-AutoEncoders at pythonrepo.com")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/Ritvik19/pyradox-generative?ref=pythonrepo.com"},"Ritvik19/pyradox-generative at pythonrepo.com")),(0,l.kt)("h3",{id:"364-bnn"},"3.6.4 BNN"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JavierAntoran/Bayesian-Neural-Networks"},"JavierAntoran/Bayesian-Neural-Networks: Pytorch implementations of Bayes By Backprop, MC Dropout, SGLD, the Local Reparametrization Trick, KF-Laplace, SG-HMC and more")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/RajDandekar/MSML21_BayesianNODE"},"RajDandekar/MSML21_BayesianNODE")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/topics/bayesian-neural-networks"},"bayesian-neural-networks \xb7 GitHub Topics")),(0,l.kt)("h3",{id:"365-diffusion-models"},"3.6.5 Diffusion-Models"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/heejkoo/Awesome-Diffusion-Models"},"heejkoo/Awesome-Diffusion-Models: A collection of resources and papers on Diffusion Models and Score-based Models, a darkhorse in the field of Generative Models")),(0,l.kt)("h2",{id:"37-differential-equations-and-scientific-computation"},(0,l.kt)("span",{id:"head54"},"3.7. Differential Equations and Scientific Computation")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/SciMLDocs"},"SciML/SciMLDocs")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,"All you need is the following organization (My Idol Prof. Christopher Rackauckas):"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML"},"SciML Open Source Scientific Machine Learning")),(0,l.kt)("p",null,"Including agent based models\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDynamics"},"JuliaDynamics")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/BioJulia"},"BioJulia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/nathanaelbosch/ProbNumDiffEq.jl"},"nathanaelbosch/ProbNumDiffEq.jl: Probabilistic ODE Solvers via Bayesian Filtering and Smoothing")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PerezHz/TaylorIntegration.jl"},"PerezHz/TaylorIntegration.jl: ODE integration using Taylor's method, and more, in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gideonsimpson/BasicMD.jl"},"gideonsimpson/BasicMD.jl: A collection of basic routines for Molecular Dynamics simulations implemented in Julia")),(0,l.kt)("p",null,"Probablistic Numerical Methods:"),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/nathanaelbosch/ProbNumDiffEq.jl"},"nathanaelbosch/ProbNumDiffEq.jl: Probabilistic ODE Solvers via Bayesian Filtering and Smoothing")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"http://www.probabilistic-numerics.org/en/latest/"},"ProbNum \u2014 probnum 0.1 documentation")),(0,l.kt)("p",null,"C++:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"http://headmyshoulder.github.io/odeint-v2/"},"odeint")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/LLNL/sundials"},"LLNL/sundials: Official development repository for SUNDIALS - a SUite of Nonlinear and DIfferential/ALgebraic equation Solvers. Pull requests are welcome for bug fixes and minor changes.")),(0,l.kt)("h3",{id:"371-partial-differential-equation"},(0,l.kt)("span",{id:"head55"},"3.7.1. Partial differential equation")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.sciml.ai/dev/highlevels/partial_differential_equation_solvers/"},"Partial Differential Equation (PDE) Solvers Overview \xb7 SciML")),(0,l.kt)("p",null,"Survey",(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaPDE/SurveyofPDEPackages"},"JuliaPDE/SurveyofPDEPackages: Survey of the packages of the Julia ecosystem for solving partial differential equations")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/DiffEqOperators.jl"},"SciML/DiffEqOperators.jl: Linear operators for discretizations of differential equations and scientific machine learning (SciML)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/vavrines/Kinetic.jl"},"vavrines/Kinetic.jl: Universal modeling and simulation of fluid dynamics upon machine learning")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gridap"},"Gridap")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/kailaix/AdFem.jl"},"kailaix/AdFem.jl: Innovative, efficient, and computational-graph-based finite element simulator for inverse modeling")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/ExponentialUtilities.jl"},"SciML/ExponentialUtilities.jl: Utility functions for exponential integrators for the SciML scientific machine learning ecosystem")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/trixi-framework/Trixi.jl"},"trixi-framework/Trixi.jl: Trixi.jl: Adaptive high-order numerical simulations of hyperbolic PDEs in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaIBPM"},"JuliaIBM")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ranocha/SummationByPartsOperators.jl"},"ranocha/SummationByPartsOperators.jl: A Julia library of summation-by-parts (SBP) operators used in finite difference, Fourier pseudospectral, continuous Galerkin, and discontinuous Galerkin methods to get provably stable semidiscretizations, paying special attention to boundary conditions.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/Ferrite-FEM/Ferrite.jl"},"Ferrite-FEM/Ferrite.jl: Finite element toolbox for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaFEM"},"JuliaFEM")),(0,l.kt)("p",null,"pseudospectral",(0,l.kt)("a",{parentName:"p",href:"https://github.com/FourierFlows/FourierFlows.jl"},"FourierFlows/FourierFlows.jl: Tools for building fast, hackable, pseudospectral partial differential equation solvers on periodic domains")),(0,l.kt)("p",null,"Python\uff1a"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/DedalusProject/dedalus"},"DedalusProject/dedalus: A flexible framework for solving PDEs with modern spectral methods.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/FEniCS"},"FEniCS Project")),(0,l.kt)("h4",{id:"integral-differential-equation"},"Integral Differential Equation"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/TSGut/SparseVolterraExamples.jl"},"TSGut/SparseVolterraExamples.jl: A number of examples built on the method described in https://arxiv.org/abs/2005.06081 for solving nonlinear and integro-differential Volterra equations")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JoshKarpel/idesolver"},"JoshKarpel/idesolver: A general-purpose numerical integro-differential equation solver")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/vitesempl/RK-IDE-Julia"},"vitesempl/RK-IDE-Julia: Julia package for solving Differential Equations with Discrete and Distributed delays")),(0,l.kt)("h3",{id:"372-fractional-differential-and-calculus"},"3.7.2 Fractional Differential and Calculus"),(0,l.kt)("p",null,"Julia"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciFracX"},"SciFracX")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciFracX/FractionalDiffEq.jl"},"SciFracX/FractionalDiffEq.jl: FractionalDiffEq.jl: A Julia package aiming at solving Fractional Differential Equations using high performance numerical methods")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciFracX/FractionalSystems.jl"},"SciFracX/FractionalSystems.jl: Fractional order modeling and analysis in Julia.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciFracX/FractionalCalculus.jl"},"SciFracX/FractionalCalculus.jl: FractionalCalculus.jl: A Julia package for high performance, fast convergence and high precision numerical fractional calculus computing.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciFracX/FractionalTransforms.jl"},"SciFracX/FractionalTransforms.jl: FractionalTransforms.jl: A Julia package aiming at providing fractional order transforms with high performance.")),(0,l.kt)("h2",{id:"38-scientific-machine-learning-differential-equation-and-ml"},(0,l.kt)("span",{id:"head56"},"3.8. Scientific Machine Learning (Differential Equation and ML)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/Zymrael/awesome-neural-ode"},"Zymrael/awesome-neural-ode: A collection of resources regarding the interplay between differential equations, deep learning, dynamical systems, control and numerical methods.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/massastrello/awesome-implicit-neural-models"},"massastrello/awesome-implicit-neural-models")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"http://deeppde.org/intro/"},"High-Dimensional Partial Differential Equations - Deep PDE")),(0,l.kt)("h3",{id:"381-universal-differential-equations-neural-differential-equations"},(0,l.kt)("span",{id:"head57"},"3.8.1. Universal Differential Equations. (Neural differential equations)")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/DiffEqFlux.jl"},"SciML/DiffEqFlux.jl: Universal neural differential equations with O(1) backprop, GPUs, and stiff+non-stiff DE solvers, demonstrating scientific machine learning (SciML) and physics-informed machine learning methods")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/avik-pal/FastDEQ.jl"},"avik-pal/FastDEQ.jl: Deep Equilibrium Networks (but faster!!!)")),(0,l.kt)("p",null,"UDE with Gaussion Process",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Crown421/GPDiffEq.jl"},"Crown421/GPDiffEq.jl")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/DiffEqML/torchdyn"},"DiffEqML/torchdyn: A PyTorch based library for all things neural differential equations and implicit neural models.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/rtqichen/torchdiffeq"},"rtqichen/torchdiffeq: Differentiable ODE solvers with full GPU support and O(1)-memory backpropagation.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/patrick-kidger/diffrax?ref=zzun.app"},"patrick-kidger/diffrax at zzun.app")),(0,l.kt)("h3",{id:"382-physical-informed-neural-netwworks"},(0,l.kt)("span",{id:"head58"},"3.8.2. Physical Informed Neural Netwworks")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PredictiveIntelligenceLab"},"Predictive Intelligence Lab")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/NeuralPDE.jl"},"SciML/NeuralPDE.jl: Physics-Informed Neural Networks (PINN) and Deep BSDE Solvers of Differential Equations for Scientific Machine Learning (SciML) accelerated simulation")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/lululxvi/deepxde"},"lululxvi/deepxde: Deep learning library for solving differential equations and more")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/sciann/sciann"},"sciann/sciann: Deep learning for Engineers - Physics Informed Deep Learning")),(0,l.kt)("h3",{id:"383-neural-operator"},(0,l.kt)("span",{id:"head59"},"3.8.3. Neural Operator")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/foldfelis/NeuralOperators.jl"},"foldfelis/NeuralOperators.jl: learning the solution operator for partial differential equations in pure Julia.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/CliMA/OperatorFlux.jl"},"CliMA/OperatorFlux.jl: Operator layers for Flux.jl")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/brekmeuris/DrMZ.jl"},"brekmeuris/DrMZ.jl: Deep renormalized Mori-Zwanzig (DrMZ) Julia package.")),(0,l.kt)("h2",{id:"39-data-driven-methods-equation-searching-methods"},(0,l.kt)("span",{id:"head60"},"3.9. Data Driven Methods (Equation Searching Methods)")),(0,l.kt)("p",null,"Julia package including SINDy, Symbolic Regression, DMD"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/DataDrivenDiffEq.jl"},"SciML/DataDrivenDiffEq.jl: Data driven modeling and automated discovery of dynamical systems for the SciML Scientific Machine Learning organization")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/nmheim/NeuralArithmetic.jl"},"nmheim/NeuralArithmetic.jl: Collection of layers that can perform arithmetic operations")),(0,l.kt)("h3",{id:"391-symbolic-regression"},(0,l.kt)("span",{id:"head61"},"3.9.1. Symbolic Regression")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cavalab/srbench"},"cavalab/srbench: A living benchmark framework for symbolic regression")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/trevorstephens/gplearn"},"trevorstephens/gplearn: Genetic Programming in Python, with a scikit-learn inspired API")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MilesCranmer/PySR"},"MilesCranmer/PySR: Simple, fast, and parallelized symbolic regression in Python/Julia via regularized evolution and simulated annealing")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MilesCranmer/SymbolicRegression.jl"},"MilesCranmer/SymbolicRegression.jl: Distributed High-Performance symbolic regression in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/sisl/ExprOptimization.jl"},"sisl/ExprOptimization.jl: Algorithms for optimization of Julia expressions")),(0,l.kt)("h3",{id:"392-sindy-sparse-identification-of-nonlinear-dynamics-from-data"},(0,l.kt)("span",{id:"head62"},"3.9.2. SINDy (Sparse Identification of Nonlinear Dynamics from Data)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/dynamicslab/pysindy"},"dynamicslab/pysindy: A package for the sparse identification of nonlinear dynamical systems from data")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/dynamicslab/modified-SINDy"},"dynamicslab/modified-SINDy: Example code for paper: Automatic Differentiation to Simultaneously Identify Nonlinear Dynamics and Extract Noise Probability Distributions from Data")),(0,l.kt)("h3",{id:"393-dmd-dynamic-mode-decomposition"},(0,l.kt)("span",{id:"head63"},"3.9.3. DMD (Dynamic Mode Decomposition)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mathLab/PyDMD"},"mathLab/PyDMD: Python Dynamic Mode Decomposition")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/foldfelis/NeuralOperators.jl"},"foldfelis/NeuralOperators.jl: learning the solution operator for partial differential equations in pure Julia.")),(0,l.kt)("h2",{id:"310-model-evaluation"},(0,l.kt)("span",{id:"head64"},"3.10. Model Evaluation")),(0,l.kt)("h3",{id:"3101-structure-idendification"},(0,l.kt)("span",{id:"head65"},"3.10.1. Structure Idendification")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/StructuralIdentifiability.jl"},"SciML/StructuralIdentifiability.jl")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/alexeyovchinnikov/SIAN-Julia"},"alexeyovchinnikov/SIAN-Julia: Implementation of SIAN in Julia")),(0,l.kt)("h3",{id:"3102-global-sensitivity-anylysis"},(0,l.kt)("span",{id:"head66"},"3.10.2. Global Sensitivity Anylysis")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/lrennels/GlobalSensitivityAnalysis.jl"},"lrennels/GlobalSensitivityAnalysis.jl: Julia implementations of global sensitivity analysis methods.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/GlobalSensitivity.jl"},"SciML/GlobalSensitivity.jl")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/DiffEqSensitivity.jl"},"SciML/DiffEqSensitivity.jl: A component of the DiffEq ecosystem for enabling sensitivity analysis for scientific machine learning (SciML). Optimize-then-discretize, discretize-then-optimize, and more for ODEs, SDEs, DDEs, DAEs, etc.")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SALib/SALib"},"SALib/SALib: Sensitivity Analysis Library in Python. Contains Sobol, Morris, FAST, and other methods.")),(0,l.kt)("p",null,"R:"),(0,l.kt)("p",null,"sensitivity"),(0,l.kt)("p",null,"fast"),(0,l.kt)("p",null,"sensobol"),(0,l.kt)("h2",{id:"311-optimal-transportation"},(0,l.kt)("span",{id:"head77"},"3.11. Optimal Transportation")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaOptimalTransport"},"Optimal transport in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaOptimalTransport/OptimalTransport.jl"},"JuliaOptimalTransport/OptimalTransport.jl: Optimal transport algorithms for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaOptimalTransport/ExactOptimalTransport.jl"},"JuliaOptimalTransport/ExactOptimalTransport.jl: Solving unregularized optimal transport problems with Julia")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PythonOT/POT"},"PythonOT/POT: POT : Python Optimal Transport")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ott-jax/ott"},"ott-jax/ott")),(0,l.kt)("h2",{id:"312-agents-graph-and-networks"},(0,l.kt)("span",{id:"head81"},"3.12. Agents, Graph and Networks")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.comses.net/resources/modeling-frameworks/"},"Computational Modeling Software Frameworks")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaGraphs"},"JuliaGraphs")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDynamics/Agents.jl"},"JuliaDynamics/Agents.jl: Agent-based modeling framework in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cormullion/Karnak.jl"},"cormullion/Karnak.jl: drawing graphs and networks with Luxor")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaTeX/TikzGraphs.jl"},"JuliaTeX/TikzGraphs.jl: This library generates graph layouts using the TikZ graph layout package.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://juliagraphs.org/GraphPlot.jl/"},"https://juliagraphs.org/GraphPlot.jl/")),(0,l.kt)("p",null,"SGtSNEpi.jl: backend: Makie.jl"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaPlots/GraphRecipes.jl"},"JuliaPlots/GraphRecipes.jl: Graph-related recipes to be used with Plots.jl")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaPlots/GraphMakie.jl"},"JuliaPlots/GraphMakie.jl: Plotting graphs with Makie")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/projectmesa/mesa"},"projectmesa/mesa: Mesa is an agent-based modeling framework in Python")),(0,l.kt)("p",null,"Network"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/briatte/awesome-network-analysis#julia"},"briatte/awesome-network-analysis: A curated list of awesome network analysis resources.")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/networkx/networkx"},"networkx/networkx: Network Analysis in Python")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/GiulioRossetti/ndlib"},"GiulioRossetti/ndlib: Network Diffusion Library - (for NetworkX and iGraph)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://epidemicsonnetworks.readthedocs.io/en/latest/index.html"},"Welcome to Epidemics on Networks\u2019s documentation! \u2014 Epidemics on Networks 1.2rc1 documentation")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://chengjun.github.io/mybook/"},"\u5bfb\u627e\u4eba\u7c7b\u4f20\u64ad\u884c\u4e3a\u7684\u57fa\u56e0 \u2014 \u8ba1\u7b97\u4f20\u64ad\u5b66")),(0,l.kt)("h2",{id:"312-benchmarks"},"3.12 Benchmarks"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/SciMLBenchmarks.jl"},"SciML/SciMLBenchmarks.jl: Benchmarks for scientific machine learning (SciML) software and differential equation solvers")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jump-dev/benchmarks"},"jump-dev/benchmarks: A repository for long-term benchmarking of JuMP performance")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PIK-ICoNe/NetworkDynamicsBenchmarks"},"PIK-ICoNe/NetworkDynamicsBenchmarks")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaSmoothOptimizers/SolverBenchmark.jl"},"JuliaSmoothOptimizers/SolverBenchmark.jl: Benchmark tools for solvers")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/StatisticalRethinkingJulia/MCMCBenchmarks.jl"},"StatisticalRethinkingJulia/MCMCBenchmarks.jl: Comparing performance and results of mcmc options using Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cavalab/srbench"},"cavalab/srbench: A living benchmark framework for symbolic regression")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/sbi-benchmark/sbibm"},"sbi-benchmark/sbibm: Simulation-based inference benchmark")),(0,l.kt)("h1",{id:"4-theoretical-analysis"},(0,l.kt)("span",{id:"head67"},"4. Theoretical Analysis")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMath"},"Julia Math")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaApproximation"},"JuliaApproximation")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/sympy/sympy"},"sympy/sympy: A computer algebra system written in pure Python")),(0,l.kt)("h2",{id:"40-special-functions"},(0,l.kt)("span",{id:"head68"},"4.0. Special Functions")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMath/SpecialFunctions.jl"},"JuliaMath/SpecialFunctions.jl: Special mathematical functions in Julia")),(0,l.kt)("p",null,"InverseFunction\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMath/InverseFunctions.jl"},"JuliaMath/InverseFunctions.jl: Interface for function inversion in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaStats/StatsFuns.jl"},"JuliaStats/StatsFuns.jl: Mathematical functions related to statistics.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaStats/LogExpFunctions.jl"},"JuliaStats/LogExpFunctions.jl: Julia package for various special functions based on ",(0,l.kt)("inlineCode",{parentName:"a"},"log")," and ",(0,l.kt)("inlineCode",{parentName:"a"},"exp"),".")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.juliahub.com/LambertW/7mpiq/0.4.5/"},"Readme \xb7 LambertW.jl")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/scheinerman/Permutations.jl"},"scheinerman/Permutations.jl: Permutations class for Julia.")),(0,l.kt)("h2",{id:"41-symbolic-computation"},(0,l.kt)("span",{id:"head69"},"4.1. Symbolic Computation")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaSymbolics"},"JuliaSymbolics")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaSymbolics/Symbolics.jl"},"JuliaSymbolics/Symbolics.jl: A fast and modern CAS for a fast and modern language.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaPy/SymPy.jl"},"JuliaPy/SymPy.jl: Julia interface to SymPy via PyCall")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jlapeyre/Symata.jl"},"jlapeyre/Symata.jl: language for symbolic mathematics")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/wbhart/AbstractAlgebra.jl"},"wbhart/AbstractAlgebra.jl: Generic abstract algebra functionality in pure Julia (no C dependencies)")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/rjrosati/SymbolicTensors.jl"},"rjrosati/SymbolicTensors.jl: Manipulate tensors symbolically in Julia! Currently needs a SymPy dependency, but work is ongoing to change the backend to SymbolicUtils.jl")),(0,l.kt)("p",null,"Python:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/sympy/sympy"},"sympy/sympy: A computer algebra system written in pure Python")),(0,l.kt)("h2",{id:"fftw"},"FFTW"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMath/FFTW.jl"},"JuliaMath/FFTW.jl: Julia bindings to the FFTW library for fast Fourier transforms")),(0,l.kt)("h2",{id:"43-roots-intepolations"},(0,l.kt)("span",{id:"head70"},"4.3. Roots, Intepolations")),(0,l.kt)("h3",{id:"431-roots"},(0,l.kt)("span",{id:"head71"},"4.3.1. Roots")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,"All",(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/NonlinearSolve.jl"},"SciML/NonlinearSolve.jl: High-performance and differentiation-enabled nonlinear solvers")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/SciML/SciMLNLSolve.jl"},"SciML/SciMLNLSolve.jl: Nonlinear solver bindings for the SciML Interface")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMath/Roots.jl"},"JuliaMath/Roots.jl: Root finding functions for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://juliapackages.com/p/polynomialroots"},"PolynomialRoots \xb7 Julia Packages")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaNLSolvers/NLsolve.jl"},"JuliaNLSolvers/NLsolve.jl: Julia solvers for systems of nonlinear equations and mixed complementarity problems")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/sglyon/MINPACK.jl"},"sglyon/MINPACK.jl: Wrapper for cminpack multivariate root finding routines")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/s-baumann/FixedPointAcceleration.jl"},"s-baumann/FixedPointAcceleration.jl: Fixed Point Acceleration for Julia")),(0,l.kt)("h3",{id:"432-interpolations-and-approximations"},(0,l.kt)("span",{id:"head72"},"4.3.2. Interpolations and Approximations")),(0,l.kt)("p",null,"Julia:"),(0,l.kt)("p",null,"ApproxFun.jl"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/PumasAI/DataInterpolations.jl"},"PumasAI/DataInterpolations.jl: A library of data interpolation and smoothing functions")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMath/Interpolations.jl"},"JuliaMath/Interpolations.jl: Fast, continuous interpolation of discrete datasets in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/kbarbary/Dierckx.jl"},"kbarbary/Dierckx.jl: Julia package for 1-d and 2-d splines")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/sisl/GridInterpolations.jl"},"sisl/GridInterpolations.jl: Multidimensional grid interpolation in arbitrary dimensions")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/floswald/ApproXD.jl"},"floswald/ApproXD.jl: B-splines and linear approximators in multiple dimensions for Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/sostock/BSplines.jl"},"sostock/BSplines.jl: A Julia package for working with B-splines")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/stevengj/FastChebInterp.jl"},"stevengj/FastChebInterp.jl: fast multidimensional Chebyshev interpolation and regression in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jipolanco/BSplineKit.jl"},"jipolanco/BSplineKit.jl: A collection of B-spline tools in Julia")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/NFFT/ANOVAapprox.jl"},"NFFT/ANOVAapprox.jl: Approximation Package for High-Dimensional Functions in Julia")),(0,l.kt)("h2",{id:"42-bifurcation"},(0,l.kt)("span",{id:"head73"},"4.2. Bifurcation")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/rveltz/BifurcationKit.jl"},"rveltz/BifurcationKit.jl: A Julia package to perform Bifurcation Analysis")),(0,l.kt)("h2",{id:"44-polynomials"},"4.4 Polynomials"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaMath/Polynomials.jl"},"JuliaMath/Polynomials.jl: Polynomial manipulations in Julia")),(0,l.kt)("h1",{id:"5-writings-blog-and-web"},(0,l.kt)("span",{id:"head74"},"5. Writings, Blog and Web")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/JuliaDocs/Documenter.jl"},"JuliaDocs/Documenter.jl: A documentation generator for Julia.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/chriskiehl/Gooey"},"chriskiehl/Gooey: Turn (almost) any Python command line program into a full GUI application with one line")),(0,l.kt)("p",null,"Latex:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"http://detexify.kirelabs.org/classify.html"},"Detexify LaTeX handwritten symbol recognition")),(0,l.kt)("p",null,"Display Julia Unicode in Latex"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mossr/julia-mono-listings"},"mossr/julia-mono-listings: LaTeX listings style for Julia and Unicode support for the JuliaMono font")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/wg030/jlcode"},"wg030/jlcode: A latex package for displaying Julia code using the listings package. The package supports pdftex, luatex and xetex for compilation.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/davibarreira/NotebookToLaTeX.jl"},"davibarreira/NotebookToLaTeX.jl: A Julia package for converting your Pluto and Jupyter Notebooks into beautiful Latex.")),(0,l.kt)("p",null,"Web:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/facebook/docusaurus"},"facebook/docusaurus: Easy to maintain open source documentation websites.")),(0,l.kt)("p",null,"Hexo"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://jekyllrb.com/"},"Jekyll \u2022 Simple, blog-aware, static sites | Transform your plain text into static websites and blogs")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tlienart/Franklin.jl"},"tlienart/Franklin.jl: (yet another) static site generator. Simple, customisable, fast, maths with KaTeX, code evaluation, optional pre-rendering, in Julia.")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://mp.weixin.qq.com/s/AxZPxQgLfJ6g8bhonTvKxA"},"\u4e00\u4e2a\u50bb\u74dc\u5f0f\u6784\u5efa\u53ef\u89c6\u5316 web\u7684 Python \u795e\u5668 -- streamlit")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/streamlit/streamlit"},"streamlit/streamlit: Streamlit \u2014 The fastest way to build data apps in Python")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/gradio-app/gradio"},"gradio-app/gradio: Create UIs for your machine learning model in Python in 3 minutes")),(0,l.kt)("p",null,"GitHub Profile Settings:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/abhisheknaiidu/awesome-github-profile-readme"},"abhisheknaiidu/awesome-github-profile-readme: \ud83d\ude0e A curated list of awesome GitHub Profile READMEs \ud83d\udcdd")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://shields.io/"},"Shields.io: Quality metadata badges for open source projects")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ButterAndButterfly/GithubTools"},"ButterAndButterfly/GithubTools: \u76ee\u6807\u662f\u521b\u5efa\u4f1a\u5237\u65b0\u7684ReadMe\u9996\u9875\uff01 \u5728\u8fd9\u91cc\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230Github star/fork\u603b\u6570\u56fe\u6807, \u9879\u76eestar\u5386\u53f2\u66f2\u7ebf\uff0cstar\u6570\u6700\u591a\u7684\u524dN\u4e2aRepo\u4fe1\u606f...")),(0,l.kt)("p",null,"\u5e38\u7528",(0,l.kt)("a",{parentName:"p",href:"https://github.com/anuraghazra/github-readme-stats"},"anuraghazra/github-readme-stats: Dynamically generated stats for your github readmes")),(0,l.kt)("p",null,"\u5b57\u4f53\uff1a\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/be5invis/Sarasa-Gothic"},"be5invis/Sarasa-Gothic: Sarasa Gothic / \u66f4\u7eb1\u9ed1\u4f53 / \u66f4\u7d17\u9ed1\u9ad4 / \u66f4\u7d17\u30b4\u30b7\u30c3\u30af / \uc0ac\ub77c\uc0ac \uace0\ub515")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.nerdfonts.com/font-downloads"},"Nerd Fonts - Iconic font aggregator, glyphs/icons collection, & fonts patcher")),(0,l.kt)("h2",{id:"terminal"},"Terminal"),(0,l.kt)("p",null,"zsh"),(0,l.kt)("p",null,"ohmyzsh"),(0,l.kt)("p",null,"ohmyposh ",(0,l.kt)("a",{parentName:"p",href:"https://ohmyposh.dev/docs/installation/customize"},"Customize | Oh My Posh")))}m.isMDXComponent=!0}}]);