"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4139],{3905:function(t,e,i){i.d(e,{Zo:function(){return u},kt:function(){return h}});var a=i(7294);function n(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function r(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}function o(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?r(Object(i),!0).forEach((function(e){n(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function l(t,e){if(null==t)return{};var i,a,n=function(t,e){if(null==t)return{};var i,a,n={},r=Object.keys(t);for(a=0;a<r.length;a++)i=r[a],e.indexOf(i)>=0||(n[i]=t[i]);return n}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)i=r[a],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(n[i]=t[i])}return n}var p=a.createContext({}),c=function(t){var e=a.useContext(p),i=e;return t&&(i="function"==typeof t?t(e):o(o({},e),t)),i},u=function(t){var e=c(t.components);return a.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(t,e){var i=t.components,n=t.mdxType,r=t.originalType,p=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),s=c(i),h=n,f=s["".concat(p,".").concat(h)]||s[h]||m[h]||r;return i?a.createElement(f,o(o({ref:e},u),{},{components:i})):a.createElement(f,o({ref:e},u))}));function h(t,e){var i=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var r=i.length,o=new Array(r);o[0]=s;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:n,o[1]=l;for(var c=2;c<r;c++)o[c]=i[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,i)}s.displayName="MDXCreateElement"},6088:function(t,e,i){i.r(e),i.d(e,{assets:function(){return u},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return m}});var a=i(7462),n=i(3366),r=(i(7294),i(3905)),o=["components"],l={sidebar_position:5},p=void 0,c={unversionedId:"AI4Science/optimization",id:"AI4Science/optimization",title:"optimization",description:"Optimization",source:"@site/docs/AI4Science/optimization.md",sourceDirName:"AI4Science",slug:"/AI4Science/optimization",permalink:"/MathEpiDeepLearning/docs/AI4Science/optimization",editUrl:"https://github.com/Song921012/MathEpiDeepLearning/docs/AI4Science/optimization.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"HPC",permalink:"/MathEpiDeepLearning/docs/AI4Science/HPC"},next:{title:"bayesianInference",permalink:"/MathEpiDeepLearning/docs/AI4Science/bayesianInference"}},u={},m=[{value:"Optimization",id:"optimization",level:2},{value:'<span id="head25">3.2.1. Metaheuristic</span>',id:"321-metaheuristic",level:3},{value:'<span id="head26">3.2.2. Evolution Stragegy</span>',id:"322-evolution-stragegy",level:3},{value:'<span id="head27">3.2.3. Genetic Algorithms</span>',id:"323-genetic-algorithms",level:3},{value:'<span id="head28">3.2.4. Nonconvex</span>',id:"324-nonconvex",level:3},{value:"3.2.5. First Order Methods",id:"325-first-order-methods",level:3},{value:"3.2.6. Second Order Methods",id:"326-second-order-methods",level:3}],s={toc:m};function h(t){var e=t.components,i=(0,n.Z)(t,o);return(0,r.kt)("wrapper",(0,a.Z)({},s,i,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"optimization"},"Optimization"),(0,r.kt)("p",null,'An "learn one equals learn all" Julia Package'),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciML/GalacticOptim.jl"},"SciML/GalacticOptim.jl: Local, global, and beyond optimization for scientific machine learning (SciML)")),(0,r.kt)("p",null,"Opt Organization:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaOpt"},"JuliaOpt")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaNLSolvers"},"JuliaNLSolvers")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PSORLab"},"Process Systems and Operations Research Laboratory")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaNLSolvers/Optim.jl"},"JuliaNLSolvers/Optim.jl: Optimization functions for Julia")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaOpt/NLopt.jl"},"JuliaOpt/NLopt.jl: Package to call the NLopt nonlinear-optimization library from the Julia language")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/robertfeldt/BlackBoxOptim.jl"},"robertfeldt/BlackBoxOptim.jl: Black-box optimization for Julia")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jump-dev/MathOptInterface.jl"},"jump-dev/MathOptInterface.jl: An abstraction layer for mathematical optimization solvers.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/osqp/OSQP.jl"},"osqp/OSQP.jl: Julia interface for OSQP: The Operator Splitting QP Solver")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/psrenergy"},"PSR")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/tpapp/MultistartOptimization.jl"},"tpapp/MultistartOptimization.jl: Multistart optimization methods in Julia.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/bbopt/NOMAD.jl"},"bbopt/NOMAD.jl: Julia interface to the NOMAD blackbox optimization software")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaFirstOrder"},"JuliaFirstOrder")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/NicolasL-S/SpeedMapping.jl"},"NicolasL-S/SpeedMapping.jl: General fixed point mapping acceleration and optimization in Julia")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaManifolds/Manopt.jl"},"JuliaManifolds/Manopt.jl: Optimization on Manifolds in Julia")),(0,r.kt)("p",null,"MPEC: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/chkwon/Complementarity.jl"},"chkwon/Complementarity.jl: provides a modeling interface for mixed complementarity problems (MCP) and math programs with equilibrium problems (MPEC) via JuMP")),(0,r.kt)("p",null,"Open Optimizers",(0,r.kt)("a",{parentName:"p",href:"file:///F:/Zotero/Zotero/storage/RJ96NPGG/downloading.html"},"Download \u2013 COIN-OR: Computational Infrastructure for Operations Research")),(0,r.kt)("h3",{id:"321-metaheuristic"},(0,r.kt)("span",{id:"head25"},"3.2.1. Metaheuristic")),(0,r.kt)("p",null,"Julia:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jmejia8/Metaheuristics.jl"},"jmejia8/Metaheuristics.jl: High performance metaheuristics for optimization purely coded in Julia.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ac-tuwien/MHLib.jl"},"ac-tuwien/MHLib.jl: MHLib.jl - A Toolbox for Metaheuristics and Hybrid Optimization Methods in Julia")),(0,r.kt)("p",null,"Python:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/guofei9987/scikit-opt"},"guofei9987/scikit-opt: Genetic Algorithm, Particle Swarm Optimization, Simulated Annealing, Ant Colony Optimization Algorithm,Immune Algorithm, Artificial Fish Swarm Algorithm, Differential Evolution and TSP(Traveling salesman)")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/scikit-optimize/scikit-optimize"},"scikit-optimize/scikit-optimize: Sequential model-based optimization with a ",(0,r.kt)("inlineCode",{parentName:"a"},"scipy.optimize")," interface")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ac-tuwien/pymhlib"},"ac-tuwien/pymhlib: pymhlib - A Toolbox for Metaheuristics and Hybrid Optimization Methods")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/cvxpy/cvxpy"},"cvxpy/cvxpy: A Python-embedded modeling language for convex optimization problems.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/coin-or/pulp"},"coin-or/pulp: A python Linear Programming API")),(0,r.kt)("h3",{id:"322-evolution-stragegy"},(0,r.kt)("span",{id:"head26"},"3.2.2. Evolution Stragegy")),(0,r.kt)("p",null,"Julia:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/wildart/Evolutionary.jl"},"wildart/Evolutionary.jl: Evolutionary & genetic algorithms for Julia")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/d9w/Cambrian.jl"},"d9w/Cambrian.jl: An Evolutionary Computation framework")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jbrea/CMAEvolutionStrategy.jl"},"jbrea/CMAEvolutionStrategy.jl")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/AStupidBear/GCMAES.jl"},"AStupidBear/GCMAES.jl: Gradient-based Covariance Matrix Adaptation Evolutionary Strategy for Real Blackbox Optimization")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/itsdfish/DifferentialEvolutionMCMC.jl"},"itsdfish/DifferentialEvolutionMCMC.jl: A Julia package for Differential Evolution MCMC")),(0,r.kt)("h3",{id:"323-genetic-algorithms"},(0,r.kt)("span",{id:"head27"},"3.2.3. Genetic Algorithms")),(0,r.kt)("p",null,"Julia:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/d9w/CartesianGeneticProgramming.jl"},"d9w/CartesianGeneticProgramming.jl: Cartesian Genetic Programming for Julia")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/WestleyArgentum/GeneticAlgorithms.jl"},"WestleyArgentum/GeneticAlgorithms.jl: A lightweight framework for writing genetic algorithms in Julia")),(0,r.kt)("p",null,"Python:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/trevorstephens/gplearn"},"trevorstephens/gplearn: Genetic Programming in Python, with a scikit-learn inspired API")),(0,r.kt)("h3",{id:"324-nonconvex"},(0,r.kt)("span",{id:"head28"},"3.2.4. Nonconvex")),(0,r.kt)("p",null,"Julia:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaNonconvex/Nonconvex.jl"},"JuliaNonconvex/Nonconvex.jl: Toolbox for non-convex constrained optimization.")),(0,r.kt)("h3",{id:"325-first-order-methods"},"3.2.5. First Order Methods"),(0,r.kt)("p",null,"Proximal\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kul-optec"},"OPTEC")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/kul-optec/CIAOAlgorithms.jl"},"kul-optec/CIAOAlgorithms.jl: Coordinate and Incremental Aggregated Optimization Algorithms")),(0,r.kt)("h3",{id:"326-second-order-methods"},"3.2.6. Second Order Methods"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/search?o=desc&q=stochastic+quasi-newton&s=updated&type=Repositories"},"Search \xb7 stochastic quasi-newton")),(0,r.kt)("p",null,"Good",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hiroyuki-kasai/SGDLibrary"},"hiroyuki-kasai/SGDLibrary: MATLAB/Octave library for stochastic optimization algorithms: Version 1.0.20")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/gowerrobert/StochOpt.jl"},"gowerrobert/StochOpt.jl: A suite of stochastic optimization methods for solving the empirical risk minimization problem.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/pcmoritz/slbfgs"},"pcmoritz/slbfgs: Stochastic LBFGS")))}h.isMDXComponent=!0}}]);