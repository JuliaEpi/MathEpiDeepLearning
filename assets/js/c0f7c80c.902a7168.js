"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2481],{3905:function(e,t,i){i.d(t,{Zo:function(){return c},kt:function(){return m}});var a=i(7294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),f=u(i),m=n,h=f["".concat(s,".").concat(m)]||f[m]||p[m]||r;return i?a.createElement(h,l(l({ref:t},c),{},{components:i})):a.createElement(h,l({ref:t},c))}));function m(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=i.length,l=new Array(r);l[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var u=2;u<r;u++)l[u]=i[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,i)}f.displayName="MDXCreateElement"},8271:function(e,t,i){i.r(t),i.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return p}});var a=i(7462),n=i(3366),r=(i(7294),i(3905)),l=["components"],o={sidebar_position:7},s=void 0,u={unversionedId:"AI4Science/numericalanalysis",id:"AI4Science/numericalanalysis",title:"numericalanalysis",description:"JuliaAlgebra",source:"@site/docs/AI4Science/numericalanalysis.md",sourceDirName:"AI4Science",slug:"/AI4Science/numericalanalysis",permalink:"/MathEpiDeepLearning/docs/AI4Science/numericalanalysis",editUrl:"https://github.com/Song921012/MathEpiDeepLearning/docs/AI4Science/numericalanalysis.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"bayesianInference",permalink:"/MathEpiDeepLearning/docs/AI4Science/bayesianInference"},next:{title:"optcontrol",permalink:"/MathEpiDeepLearning/docs/AI4Science/optcontrol"}},c={},p=[{value:'<span id="head55">3.7.1. Partial differential equation</span>',id:"371-partial-differential-equation",level:3},{value:"Integral Differential Equation",id:"integral-differential-equation",level:4},{value:"3.7.2 Fractional Differential and Calculus",id:"372-fractional-differential-and-calculus",level:3},{value:'<span id="head64">3.10. Model Evaluation</span>',id:"310-model-evaluation",level:2},{value:'<span id="head65">3.10.1. Structure Idendification</span>',id:"3101-structure-idendification",level:3},{value:'<span id="head66">3.10.2. Global Sensitivity Anylysis</span>',id:"3102-global-sensitivity-anylysis",level:3}],f={toc:p};function m(e){var t=e.components,i=(0,n.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},f,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"numerical-algebra"},"Numerical Algebra"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaAlgebra"},"JuliaAlgebra")),(0,r.kt)("h1",{id:"sciml"},"SciML"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciML/SciMLDocs"},"SciML/SciMLDocs")),(0,r.kt)("p",null,"Julia:"),(0,r.kt)("p",null,"All you need is the following organization (My Idol Prof. Christopher Rackauckas):"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciML"},"SciML Open Source Scientific Machine Learning")),(0,r.kt)("p",null,"Including agent based models\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaDynamics"},"JuliaDynamics")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/BioJulia"},"BioJulia")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/nathanaelbosch/ProbNumDiffEq.jl"},"nathanaelbosch/ProbNumDiffEq.jl: Probabilistic ODE Solvers via Bayesian Filtering and Smoothing")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PerezHz/TaylorIntegration.jl"},"PerezHz/TaylorIntegration.jl: ODE integration using Taylor's method, and more, in Julia")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/gideonsimpson/BasicMD.jl"},"gideonsimpson/BasicMD.jl: A collection of basic routines for Molecular Dynamics simulations implemented in Julia")),(0,r.kt)("p",null,"Probablistic Numerical Methods:"),(0,r.kt)("p",null,"Julia:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/nathanaelbosch/ProbNumDiffEq.jl"},"nathanaelbosch/ProbNumDiffEq.jl: Probabilistic ODE Solvers via Bayesian Filtering and Smoothing")),(0,r.kt)("p",null,"Python:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://www.probabilistic-numerics.org/en/latest/"},"ProbNum \u2014 probnum 0.1 documentation")),(0,r.kt)("p",null,"C++:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://headmyshoulder.github.io/odeint-v2/"},"odeint")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/LLNL/sundials"},"LLNL/sundials: Official development repository for SUNDIALS - a SUite of Nonlinear and DIfferential/ALgebraic equation Solvers. Pull requests are welcome for bug fixes and minor changes.")),(0,r.kt)("h3",{id:"371-partial-differential-equation"},(0,r.kt)("span",{id:"head55"},"3.7.1. Partial differential equation")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.sciml.ai/dev/highlevels/partial_differential_equation_solvers/"},"Partial Differential Equation (PDE) Solvers Overview \xb7 SciML")),(0,r.kt)("p",null,"Survey",(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaPDE/SurveyofPDEPackages"},"JuliaPDE/SurveyofPDEPackages: Survey of the packages of the Julia ecosystem for solving partial differential equations")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciML/DiffEqOperators.jl"},"SciML/DiffEqOperators.jl: Linear operators for discretizations of differential equations and scientific machine learning (SciML)")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/vavrines/Kinetic.jl"},"vavrines/Kinetic.jl: Universal modeling and simulation of fluid dynamics upon machine learning")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/gridap"},"Gridap")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/kailaix/AdFem.jl"},"kailaix/AdFem.jl: Innovative, efficient, and computational-graph-based finite element simulator for inverse modeling")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciML/ExponentialUtilities.jl"},"SciML/ExponentialUtilities.jl: Utility functions for exponential integrators for the SciML scientific machine learning ecosystem")),(0,r.kt)("p",null,"good",(0,r.kt)("a",{parentName:"p",href:"https://github.com/trixi-framework/Trixi.jl"},"trixi-framework/Trixi.jl: Trixi.jl: Adaptive high-order numerical simulations of hyperbolic PDEs in Julia")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaIBPM"},"JuliaIBM")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ranocha/SummationByPartsOperators.jl"},"ranocha/SummationByPartsOperators.jl: A Julia library of summation-by-parts (SBP) operators used in finite difference, Fourier pseudospectral, continuous Galerkin, and discontinuous Galerkin methods to get provably stable semidiscretizations, paying special attention to boundary conditions.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Ferrite-FEM/Ferrite.jl"},"Ferrite-FEM/Ferrite.jl: Finite element toolbox for Julia")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaFEM"},"JuliaFEM")),(0,r.kt)("p",null,"pseudospectral",(0,r.kt)("a",{parentName:"p",href:"https://github.com/FourierFlows/FourierFlows.jl"},"FourierFlows/FourierFlows.jl: Tools for building fast, hackable, pseudospectral partial differential equation solvers on periodic domains")),(0,r.kt)("p",null,"Python\uff1a"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/DedalusProject/dedalus"},"DedalusProject/dedalus: A flexible framework for solving PDEs with modern spectral methods.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/FEniCS"},"FEniCS Project")),(0,r.kt)("h4",{id:"integral-differential-equation"},"Integral Differential Equation"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/TSGut/SparseVolterraExamples.jl"},"TSGut/SparseVolterraExamples.jl: A number of examples built on the method described in https://arxiv.org/abs/2005.06081 for solving nonlinear and integro-differential Volterra equations")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JoshKarpel/idesolver"},"JoshKarpel/idesolver: A general-purpose numerical integro-differential equation solver")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/vitesempl/RK-IDE-Julia"},"vitesempl/RK-IDE-Julia: Julia package for solving Differential Equations with Discrete and Distributed delays")),(0,r.kt)("h3",{id:"372-fractional-differential-and-calculus"},"3.7.2 Fractional Differential and Calculus"),(0,r.kt)("p",null,"Julia"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciFracX"},"SciFracX")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciFracX/FractionalDiffEq.jl"},"SciFracX/FractionalDiffEq.jl: FractionalDiffEq.jl: A Julia package aiming at solving Fractional Differential Equations using high performance numerical methods")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciFracX/FractionalSystems.jl"},"SciFracX/FractionalSystems.jl: Fractional order modeling and analysis in Julia.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciFracX/FractionalCalculus.jl"},"SciFracX/FractionalCalculus.jl: FractionalCalculus.jl: A Julia package for high performance, fast convergence and high precision numerical fractional calculus computing.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciFracX/FractionalTransforms.jl"},"SciFracX/FractionalTransforms.jl: FractionalTransforms.jl: A Julia package aiming at providing fractional order transforms with high performance.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaTurkuDataScience/FdeSolver.jl"},"JuliaTurkuDataScience/FdeSolver.jl: FdeSolver.jl: A Julia package for the numerical solution of fractional differential equations (FDEs) as well as systems of equations.")),(0,r.kt)("h2",{id:"310-model-evaluation"},(0,r.kt)("span",{id:"head64"},"3.10. Model Evaluation")),(0,r.kt)("h3",{id:"3101-structure-idendification"},(0,r.kt)("span",{id:"head65"},"3.10.1. Structure Idendification")),(0,r.kt)("p",null,"Julia:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciML/StructuralIdentifiability.jl"},"SciML/StructuralIdentifiability.jl")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/alexeyovchinnikov/SIAN-Julia"},"alexeyovchinnikov/SIAN-Julia: Implementation of SIAN in Julia")),(0,r.kt)("h3",{id:"3102-global-sensitivity-anylysis"},(0,r.kt)("span",{id:"head66"},"3.10.2. Global Sensitivity Anylysis")),(0,r.kt)("p",null,"Julia:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/lrennels/GlobalSensitivityAnalysis.jl"},"lrennels/GlobalSensitivityAnalysis.jl: Julia implementations of global sensitivity analysis methods.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciML/GlobalSensitivity.jl"},"SciML/GlobalSensitivity.jl")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SciML/DiffEqSensitivity.jl"},"SciML/DiffEqSensitivity.jl: A component of the DiffEq ecosystem for enabling sensitivity analysis for scientific machine learning (SciML). Optimize-then-discretize, discretize-then-optimize, and more for ODEs, SDEs, DDEs, DAEs, etc.")),(0,r.kt)("p",null,"Python:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/SALib/SALib"},"SALib/SALib: Sensitivity Analysis Library in Python. Contains Sobol, Morris, FAST, and other methods.")),(0,r.kt)("p",null,"R:"),(0,r.kt)("p",null,"sensitivity"),(0,r.kt)("p",null,"fast"),(0,r.kt)("p",null,"sensobol"))}m.isMDXComponent=!0}}]);